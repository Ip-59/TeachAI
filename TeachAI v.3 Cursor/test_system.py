#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã TeachAI –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –∏ –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å.
"""

import sys
import traceback


def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")

    try:
        # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        print("  üì¶ –ò–º–ø–æ—Ä—Ç engine...")
        from engine import TeachAIEngine

        print("    ‚úÖ engine.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç examples_generator...")
        from examples_generator import ExamplesGenerator

        print("    ‚úÖ examples_generator.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç examples_generation...")
        from examples_generation import ExamplesGeneration

        print("    ‚úÖ examples_generation.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç examples_validation...")
        from examples_validation import ExamplesValidation

        print("    ‚úÖ examples_validation.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç content_generator...")
        from content_generator import ContentGenerator

        print("    ‚úÖ content_generator.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç lesson_interface...")
        from lesson_interface import LessonInterface

        print("    ‚úÖ lesson_interface.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç lesson_display...")
        from lesson_display import LessonDisplay

        print("    ‚úÖ lesson_display.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç lesson_navigation...")
        from lesson_navigation import LessonNavigation

        print("    ‚úÖ lesson_navigation.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç lesson_interaction...")
        from lesson_interaction import LessonInteraction

        print("    ‚úÖ lesson_interaction.py - OK")

        print("  üì¶ –ò–º–ø–æ—Ä—Ç lesson_utils...")
        from lesson_utils import LessonUtils

        print("    ‚úÖ lesson_utils.py - OK")

        print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {str(e)}")
        print(f"üîç –î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        return False


def test_objects_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤...")

    try:
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è TeachAIEngine
        print("  üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ TeachAIEngine...")
        from engine import TeachAIEngine

        engine = TeachAIEngine()
        print("    ‚úÖ TeachAIEngine —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è ExamplesGenerator
        print("  üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ExamplesGenerator...")
        from examples_generator import ExamplesGenerator

        examples_gen = ExamplesGenerator("test_api_key")
        print("    ‚úÖ ExamplesGenerator —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è ExamplesGeneration
        print("  üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ExamplesGeneration...")
        from examples_generation import ExamplesGeneration

        examples_gen_module = ExamplesGeneration("test_api_key")
        print("    ‚úÖ ExamplesGeneration —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è ExamplesValidation
        print("  üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ExamplesValidation...")
        from examples_validation import ExamplesValidation

        examples_val = ExamplesValidation("test_api_key")
        print("    ‚úÖ ExamplesValidation —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        print("‚úÖ –í—Å–µ –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: {str(e)}")
        print(f"üîç –î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        return False


def test_delegation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –≤ ExamplesGenerator."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤...")

    try:
        from examples_generator import ExamplesGenerator

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç
        generator = ExamplesGenerator("test_api_key")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤
        print("  üîÑ –¢–µ—Å—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è _determine_course_subject...")
        result = generator._determine_course_subject({}, "Python —É—Ä–æ–∫", ["python"])
        print(f"    ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

        print("  üîÑ –¢–µ—Å—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è _validate_examples_relevance...")
        result = generator._validate_examples_relevance("print('Hello')", "Python")
        print(f"    ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

        print("  üîÑ –¢–µ—Å—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è _create_fallback_python_example...")
        result = generator._create_fallback_python_example("–¢–µ—Å—Ç–æ–≤—ã–π —É—Ä–æ–∫")
        print(f"    ‚úÖ Fallback –ø—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω (–¥–ª–∏–Ω–∞: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤)")

        print("‚úÖ –í—Å–µ –¥–µ–ª–µ–≥–∏—Ä—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
        print(f"üîç –î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã TeachAI –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞")
    print("=" * 60)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        print("\n‚ùå –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        return False

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
    if not test_objects_creation():
        print("\n‚ùå –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        return False

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    if not test_delegation():
        print("\n‚ùå –¢–µ—Å—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω!")
        return False

    print("\n" + "=" * 60)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ TeachAI –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É!")
    print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   - Jupyter Notebook: TeachAI.ipynb")
    print("   - –ò–ª–∏: python main.py")

    return True


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
