#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –¥–ª—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
"""

import sys
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

def test_placeholder_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –¥–ª—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –¥–ª—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ContentFormatter
        from content_formatter import ContentFormatter
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
        formatter = ContentFormatter()
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –±–ª–æ–∫–∞–º–∏ –∫–æ–¥–∞
        test_content = """# –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤

–≠—Ç–æ—Ç —É—Ä–æ–∫ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞.

## –ë–ª–æ–∫ –∫–æ–¥–∞ Python

```python
def hello_world():
    print("Hello, World!")
    return "Success"

result = hello_world()
print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
```

## –ë–ª–æ–∫ –∫–æ–¥–∞ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —è–∑—ã–∫–∞

```
–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –±–ª–æ–∫ –∫–æ–¥–∞
–±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —è–∑—ã–∫–∞
```

## Inline –∫–æ–¥

–í–æ—Ç –ø—Ä–∏–º–µ—Ä `inline –∫–æ–¥–∞` –≤ —Ç–µ–∫—Å—Ç–µ.

## –ï—â–µ –æ–¥–∏–Ω –±–ª–æ–∫ –∫–æ–¥–∞

```python
import numpy as np

# –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤
arr = np.array([1, 2, 3, 4, 5])
print(f"–ú–∞—Å—Å–∏–≤: {arr}")
print(f"–°—É–º–º–∞: {np.sum(arr)}")
```

–ö–æ–Ω–µ—Ü —É—Ä–æ–∫–∞.
"""
        
        print("üìù –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:")
        print(test_content)
        print("\n" + "="*50 + "\n")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        print("üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
        formatted_content = formatter.format_lesson_content(test_content, "–¢–µ—Å—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤")
        
        print("‚úÖ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML:")
        print(formatted_content)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        checks = [
            ("<h1>", "–ó–∞–≥–æ–ª–æ–≤–æ–∫ H1"),
            ("<h2>", "–ó–∞–≥–æ–ª–æ–≤–æ–∫ H2"),
            ("<pre>", "–ë–ª–æ–∫–∏ –∫–æ–¥–∞ (pre)"),
            ("<code>", "Inline –∫–æ–¥"),
            ("__CODE_BLOCK_", "–ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞"),
        ]
        
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ HTML:")
        for check, description in checks:
            if check in formatted_content:
                print(f"‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"‚ùå {description}: –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        if "``<code>" in formatted_content:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞")
        else:
            print("‚úÖ –ë–ª–æ–∫–∏ –∫–æ–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            
        if "__CODE_BLOCK_" in formatted_content:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –Ω–µ –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ HTML")
        else:
            print("‚úÖ –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ HTML")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
        pre_count = formatted_content.count("<pre>")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞: {pre_count}")
        
        if pre_count >= 3:  # –û–∂–∏–¥–∞–µ–º –º–∏–Ω–∏–º—É–º 3 –±–ª–æ–∫–∞ –∫–æ–¥–∞
            print("‚úÖ –í—Å–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
        else:
            print(f"‚ùå –û–∂–∏–¥–∞–ª–∏ –º–∏–Ω–∏–º—É–º 3 –±–ª–æ–∫–∞ –∫–æ–¥–∞, –Ω–∞–π–¥–µ–Ω–æ {pre_count}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üî¨ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤...\n")
    
    # –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
    test_placeholder_system()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
