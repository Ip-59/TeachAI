#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π TeachAI.
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã.
"""

import subprocess
import sys
import os

def install_package(package):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞–∫–µ—Ç —Å –ø–æ–º–æ—â—å—é pip."""
    try:
        print(f"üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {package}...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", package])
        print(f"‚úÖ {package} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ {package}: {str(e)}")
        return False

def check_package(package):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç."""
    try:
        __import__(package)
        return True
    except ImportError:
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    print("üöÄ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô TEACHAI")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    dependencies = [
        "openai>=1.95.1",
        "ipywidgets>=8.1.7", 
        "jupyter>=1.1.0",
        "ipython>=9.4.0",
        "python-dotenv>=1.1.1",
        "pandas>=2.3.1",
        "numpy>=2.3.1",
        "scikit-learn>=1.5.0",
        "scipy>=1.14.0",
        "matplotlib>=3.10.3",
        "seaborn>=0.13.2",
        "markdown>=3.5.2",
        "pygments>=2.17.2"
    ]
    
    # –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
    import_names = [
        "openai",
        "ipywidgets",
        "jupyter", 
        "IPython",
        "dotenv",
        "pandas",
        "numpy",
        "sklearn",
        "scipy",
        "matplotlib",
        "seaborn",
        "markdown",
        "pygments"
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    installed = []
    missing = []
    
    for package, import_name in zip(dependencies, import_names):
        if check_package(import_name):
            print(f"‚úÖ {package} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            installed.append(package)
        else:
            print(f"‚ùå {package} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            missing.append(package)
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {len(installed)} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, {len(missing)} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    if not missing:
        print("\nüéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        return
    
    print(f"\nüì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã ({len(missing)} —à—Ç.)...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã
    success_count = 0
    for package in missing:
        if install_package(package):
            success_count += 1
        print()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    
    print("=" * 50)
    print(f"üìà –†–ï–ó–£–õ–¨–¢–ê–¢ –£–°–¢–ê–ù–û–í–ö–ò:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {success_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {len(missing) - success_count}")
    
    if success_count == len(missing):
        print("\nüéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("–¢–µ–ø–µ—Ä—å TeachAI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print(f"\n‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {success_count} –∏–∑ {len(missing)} –ø–∞–∫–µ—Ç–æ–≤.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã –≤—Ä—É—á–Ω—É—é.")
    
    print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ TeachAI –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python run_teachai.py")
    print("   –∏–ª–∏")
    print("   jupyter notebook TeachAI_clean.ipynb")

if __name__ == "__main__":
    main() 