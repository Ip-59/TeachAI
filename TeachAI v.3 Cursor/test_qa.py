"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ TeachAI
"""

from engine import TeachAIEngine


def test_qa_function():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤")
    print("=" * 50)

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–≤–∏–∂–∫–∞
    engine = TeachAIEngine()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    if engine.initialize():
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ TeachAI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

        # –ü–æ–ª—É—á–∞–µ–º content_generator
        content_generator = engine.content_generator

        # –¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
        test_question = "–ø–æ—á–µ–º—É —Å–Ω–µ–≥ –±–µ–ª—ã–π?"

        print(f"‚ùì –¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å: {test_question}")

        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            answer = content_generator.answer_question(
                course="–û—Å–Ω–æ–≤—ã Python",
                section="–û—Å–Ω–æ–≤—ã Python –∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å",
                topic="–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python",
                lesson="–û—Å–Ω–æ–≤—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
                user_question=test_question,
                lesson_content="Python - —ç—Ç–æ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è...",
                user_name="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                communication_style="friendly",
            )

            print("‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
            print(f"üìù –û—Ç–≤–µ—Ç: {answer}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {str(e)}")

    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TeachAI")


if __name__ == "__main__":
    test_qa_function()
