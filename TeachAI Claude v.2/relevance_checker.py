"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é —É—Ä–æ–∫–∞.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑—É—á–∞–µ–º–æ–π —Ç–µ–º–µ.
–ò–°–ü–†–ê–í–õ–ï–ù–û: –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
"""

import json
import re
from content_utils import BaseContentGenerator


class RelevanceChecker(BaseContentGenerator):
    """–ü—Ä–æ–≤–µ—Ä—â–∏–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ —É—Ä–æ–∫—É."""

    def __init__(self, api_key):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—â–∏–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏.

        Args:
            api_key (str): API –∫–ª—é—á OpenAI
        """
        super().__init__(api_key)
        self.logger.info("RelevanceChecker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def check_question_relevance(self, user_question, lesson_content, lesson_data):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é —É—Ä–æ–∫–∞.

        Args:
            user_question (str): –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            lesson_content (str): –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            lesson_data (dict): –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞

        Returns:
            dict: –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–ª—é—á–∞–º–∏:
                - is_relevant (bool): –†–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω –ª–∏ –≤–æ–ø—Ä–æ—Å
                - confidence (float): –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ—Ü–µ–Ω–∫–µ (0-100)
                - reason (str): –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
                - suggestions (list): –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–µ—Å–ª–∏ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω)

        Raises:
            Exception: –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Ä–æ–∫–µ
            lesson_title = lesson_data.get("title", "–£—Ä–æ–∫")
            lesson_description = lesson_data.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
            lesson_keywords = lesson_data.get("keywords", [])

            # –û—á–∏—â–∞–µ–º HTML —Ç–µ–≥–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            clean_content = self._clean_html_for_analysis(lesson_content)

            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            content_for_analysis = (
                clean_content[:2500] if len(clean_content) > 2500 else clean_content
            )

            prompt = self._build_relevance_prompt(
                user_question,
                lesson_title,
                lesson_description,
                lesson_keywords,
                content_for_analysis,
            )

            messages = [
                {
                    "role": "system",
                    "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é, –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑—É—á–∞–µ–º–æ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª—É. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –≤–æ–ø—Ä–æ—Å –∫ —Ç–µ–º–µ —É—Ä–æ–∫–∞.",
                },
                {"role": "user", "content": prompt},
            ]

            response_content = self.make_api_request(
                messages=messages,
                temperature=0.2,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
                max_tokens=1500,
                response_format={"type": "json_object"},
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            self.save_debug_response(
                "relevance_check",
                prompt,
                response_content,
                {
                    "user_question": user_question,
                    "lesson_title": lesson_title,
                    "lesson_description": lesson_description,
                },
            )

            relevance_data = json.loads(response_content)
            result = self._extract_relevance_from_response(relevance_data)

            self.logger.info(
                f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {result['is_relevant']} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']}%)"
            )
            return result

        except Exception as e:
            self.logger.error(
                f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏: {str(e)}"
            )
            raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–∞: {str(e)}")

    def generate_non_relevant_response(self, user_question, suggestions):
        """
        –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –¢–û–ß–ù–û –¢–ê–ö–û–ô –ñ–ï —Ñ–æ—Ä–º–∞—Ç –∫–∞–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, —Ç–æ–ª—å–∫–æ —Å –∂–µ–ª—Ç—ã–º —Ñ–æ–Ω–æ–º.

        Args:
            user_question (str): –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            suggestions (list): –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤

        Returns:
            str: –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        """
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
            if suggestions and len(suggestions) > 0:
                suggestions_html = "<ul>"
                for suggestion in suggestions[:3]:  # –ú–∞–∫—Å–∏–º—É–º 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                    suggestions_html += f"<li>{suggestion}</li>"
                suggestions_html += "</ul>"
            else:
                suggestions_html = "<p>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.</p>"

            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–û–ß–ù–û –¢–ê–ö–û–ô –ñ–ï CSS –∫–∞–∫ —É qa-answer, —Ç–æ–ª—å–∫–æ —Å –∂–µ–ª—Ç—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
            response = f"""
            <style>
            .qa-answer {{
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                font-size: 16px;
                line-height: 1.4;
                padding: 20px;
                background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
                border-radius: 10px;
                margin: 15px 0;
                border-left: 4px solid #856404;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }}
            .qa-answer h1, .qa-answer h2, .qa-answer h3, .qa-answer h4 {{
                color: #495057;
                margin-top: 15px;
                margin-bottom: 8px;
                line-height: 1.2;
                border-bottom: 2px solid #856404;
                padding-bottom: 4px;
            }}
            .qa-answer h1 {{ font-size: 20px; }}
            .qa-answer h2 {{ font-size: 18px; }}
            .qa-answer h3 {{ font-size: 17px; }}
            .qa-answer h4 {{ font-size: 16px; }}
            .qa-answer p {{
                margin-bottom: 8px;
                line-height: 1.3;
                text-align: justify;
            }}
            .qa-answer ul, .qa-answer ol {{
                margin-bottom: 10px;
                padding-left: 25px;
                line-height: 1.3;
            }}
            .qa-answer li {{
                margin-bottom: 4px;
            }}
            .qa-answer code {{
                background-color: #f8f9fa;
                color: #d63384;
                padding: 2px 6px;
                border-radius: 4px;
                font-family: 'Courier New', monospace;
                font-size: 14px;
                font-weight: 600;
                border: 1px solid #dee2e6;
            }}
            .qa-answer pre {{
                background-color: #f8f9fa;
                color: #212529;
                padding: 12px;
                border-radius: 8px;
                overflow-x: auto;
                margin: 10px 0;
                font-family: 'Courier New', monospace;
                font-size: 14px;
                line-height: 1.05;
                border: 2px solid #dee2e6;
            }}
            .qa-answer pre code {{
                background: none;
                color: inherit;
                padding: 0;
                font-size: inherit;
                border: none;
            }}
            .qa-answer .answer-block {{
                background-color: #ffffff;
                border: 1px solid #dee2e6;
                border-radius: 6px;
                padding: 12px;
                margin: 10px 0;
                box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            }}
            .qa-answer strong {{
                color: #495057;
                font-weight: 600;
            }}
            .qa-answer em {{
                color: #6c757d;
                font-style: italic;
            }}
            </style>
            <div class="qa-answer">
                <h4 style='margin-top: 0; color: #856404;'>ü§î –í–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å —Ç–µ–∫—É—â–∏–º —É—Ä–æ–∫–æ–º</h4>
                <p><strong>–í–∞—à –≤–æ–ø—Ä–æ—Å:</strong> {user_question}</p>
                <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–µ–º–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:</p>
                {suggestions_html}
                <p><em>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º —É—Ä–æ–∫–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–ª–µ–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã.</em></p>
            </div>
            """

            self.logger.info("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç–≤–µ—Ç –¥–ª—è –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞")
            return response

        except Exception as e:
            self.logger.error(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞: {str(e)}"
            )
            return f"""
            <div style='background-color: #fff3cd; color: #856404; padding: 15px; border-radius: 8px; margin: 15px 0; border-left: 4px solid #ffc107;'>
                <h4 style='margin-top: 0; color: #856404;'>ü§î –í–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å —Ç–µ–∫—É—â–∏–º —É—Ä–æ–∫–æ–º</h4>
                <p><strong>–í–∞—à –≤–æ–ø—Ä–æ—Å:</strong> {user_question}</p>
                <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–µ–º–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏–∑—É—á–∞–µ–º—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º.</p>
            </div>
            """

    def generate_multiple_questions_warning(self, questions_count):
        """
        –ò–°–ü–†–ê–í–õ–ï–ù–û: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≤–æ–ø—Ä–æ—Å–æ–≤.

        Args:
            questions_count (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

        Returns:
            str: –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        """
        return f"""
        <style>
        .questions-warning {{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 16px;
            line-height: 1.4;
            padding: 20px;
            background: linear-gradient(135deg, #d1ecf1 0%, #bee5eb 100%);
            border-radius: 10px;
            margin: 15px 0;
            border-left: 4px solid #17a2b8;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }}
        .questions-warning h4 {{
            color: #495057;
            margin-top: 0;
            margin-bottom: 8px;
            line-height: 1.2;
            border-bottom: 2px solid #17a2b8;
            padding-bottom: 4px;
            font-size: 18px;
        }}
        .questions-warning p {{
            margin-bottom: 8px;
            line-height: 1.3;
            color: #0c5460;
        }}
        .questions-warning strong {{
            color: #495057;
            font-weight: 600;
        }}
        .questions-warning em {{
            color: #0c5460;
            font-style: italic;
        }}
        </style>
        <div class="questions-warning">
            <h4>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</h4>
            <p>–í—ã —É–∂–µ –∑–∞–¥–∞–ª–∏ <strong>{questions_count} –≤–æ–ø—Ä–æ—Å–æ–≤</strong> –ø–æ —ç—Ç–æ–º—É —É—Ä–æ–∫—É. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω–æ, —á—Ç–æ –≤—ã –∞–∫—Ç–∏–≤–Ω–æ –∏–∑—É—á–∞–µ—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª!</p>
            <p>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é —É—Ä–æ–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.</p>
            <p><em>–ü–æ–º–Ω–∏—Ç–µ: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞–Ω–∏–π —Ç–∞–∫ –∂–µ –≤–∞–∂–Ω–æ, –∫–∞–∫ –∏ –∏–∑—É—á–µ–Ω–∏–µ —Ç–µ–æ—Ä–∏–∏!</em></p>
        </div>
        """

    def _clean_html_for_analysis(self, content):
        """
        –û—á–∏—â–∞–µ—Ç HTML —Ç–µ–≥–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.

        Args:
            content (str): –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å HTML

        Returns:
            str: –û—á–∏—â–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
        """
        clean_content = re.sub(r"<[^>]+>", " ", content)
        clean_content = re.sub(r"\s+", " ", clean_content).strip()
        return clean_content

    def _build_relevance_prompt(
        self, user_question, lesson_title, lesson_description, lesson_keywords, content
    ):
        """
        –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏.

        Args:
            user_question (str): –í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            lesson_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            lesson_description (str): –û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            lesson_keywords (list): –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —É—Ä–æ–∫–∞
            content (str): –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞

        Returns:
            str: –ü—Ä–æ–º–ø—Ç –¥–ª—è API
        """
        keywords_str = (
            ", ".join(lesson_keywords)
            if isinstance(lesson_keywords, list)
            else str(lesson_keywords)
        )

        return f"""
        –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç) —Ç–µ–º–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞:

        –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –£–†–û–ö–ï:
        –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞: {lesson_title}
        –û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞: {lesson_description}
        –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords_str}

        –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞:
        {content}

        –í–û–ü–†–û–° –°–¢–£–î–ï–ù–¢–ê:
        {user_question}

        –ó–ê–î–ê–ß–ê:
        –û–ø—Ä–µ–¥–µ–ª–∏, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –≤–æ–ø—Ä–æ—Å –∫ —Ç–µ–º–µ —É—Ä–æ–∫–∞. –í–æ–ø—Ä–æ—Å —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º, –µ—Å–ª–∏:
        1. –û–Ω –∫–∞—Å–∞–µ—Ç—Å—è –ø–æ–Ω—è—Ç–∏–π, —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏–ª–∏ —Ç–µ–º, —É–ø–æ–º—è–Ω—É—Ç—ã—Ö –≤ —É—Ä–æ–∫–µ
        2. –û–Ω —Å–≤—è–∑–∞–Ω —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —É—Ä–æ–∫–∞
        3. –û–Ω –ø—Ä–æ—Å–∏—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
        4. –û–Ω –∫–∞—Å–∞–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–ª–∏ —Å–ª—É—á–∞–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ –æ–±–ª–∞—Å—Ç–∏ —É—Ä–æ–∫–∞

        –í–æ–ø—Ä–æ—Å –ù–ï —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω, –µ—Å–ª–∏:
        1. –û–Ω –∫–∞—Å–∞–µ—Ç—Å—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–∏—Ö —Ç–µ–º –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
        2. –û–Ω –Ω–µ —Å–≤—è–∑–∞–Ω —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —É—Ä–æ–∫–∞
        3. –û–Ω –∫–∞—Å–∞–µ—Ç—Å—è –æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∂–∏–∑–Ω–∏, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –æ–±—É—á–µ–Ω–∏–µ–º
        4. –û–Ω –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–±–ª–µ–º–∞–º —Å–∏—Å—Ç–µ–º—ã

        –í–ï–†–ù–ò –†–ï–ó–£–õ–¨–¢–ê–¢ –í –§–û–†–ú–ê–¢–ï JSON:
        {{
            "is_relevant": true/false,
            "confidence": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100,
            "reason": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ—á–µ–º—É –≤–æ–ø—Ä–æ—Å —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω/–Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω",
            "suggestions": ["–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ 1", "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ 2", "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ 3"]
        }}

        –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω, –≤ –ø–æ–ª–µ suggestions —É–∫–∞–∂–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–ø–æ–∏—Å–∫–æ–≤–∏–∫–∏, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã, —Ñ–æ—Ä—É–º—ã –∏ —Ç.–¥.).
        """

    def _extract_relevance_from_response(self, relevance_data):
        """
        –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API.

        Args:
            relevance_data (dict): –û—Ç–≤–µ—Ç API –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON

        Returns:
            dict: –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            is_relevant = relevance_data.get("is_relevant", False)
            confidence = relevance_data.get("confidence", 0)
            reason = relevance_data.get("reason", "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞")
            suggestions = relevance_data.get("suggestions", [])

            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
            if not isinstance(is_relevant, bool):
                is_relevant = str(is_relevant).lower() in ["true", "1", "yes", "–¥–∞"]

            if not isinstance(confidence, (int, float)):
                confidence = 50  # –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            else:
                confidence = max(
                    0, min(100, float(confidence))
                )  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω 0-100

            if not isinstance(suggestions, list):
                suggestions = []

            return {
                "is_relevant": is_relevant,
                "confidence": confidence,
                "reason": reason,
                "suggestions": suggestions,
            }
        except Exception as e:
            self.logger.error(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏: {str(e)}"
            )
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            return {
                "is_relevant": True,  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º
                "confidence": 50,
                "reason": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å",
                "suggestions": [],
            }
