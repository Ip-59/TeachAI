"""
–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–∫–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–∫–∞–∑ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞, –ø—Ä–∏–º–µ—Ä–æ–≤, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–†–ï–§–ê–ö–¢–û–†–ò–ù–ì: –†–∞–∑–¥–µ–ª–µ–Ω –Ω–∞ –º–æ–¥—É–ª–∏ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ª–∏–º–∏—Ç—É —Ä–∞–∑–º–µ—Ä–∞.
–ò–°–ü–†–ê–í–õ–ï–ù–û –≠–¢–ê–ü 34: –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ parent_facade –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø—Ä–æ–±–ª–µ–º–∞ #145)
–ò–°–ü–†–ê–í–õ–ï–ù–û –≠–¢–ê–ü 43: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
"""

import ipywidgets as widgets
from IPython.display import display, clear_output
import logging
import traceback
from interface_utils import InterfaceUtils, InterfaceState
from lesson_interactive_handlers import LessonInteractiveHandlers
from lesson_content_manager import LessonContentManager
from lesson_utils import LessonUtils


class LessonInterface:
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–∫–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π."""

    def __init__(
        self,
        state_manager,
        content_generator,
        system_logger,
        assessment=None,
        parent_facade=None,
    ):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —É—Ä–æ–∫–æ–≤.

        Args:
            state_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
            content_generator: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            system_logger: –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥–≥–µ—Ä
            assessment: –ú–æ–¥—É–ª—å –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            parent_facade: –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∞—Å–∞–¥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) - –î–û–ë–ê–í–õ–ï–ù–û –≠–¢–ê–ü 34
        """
        self.state_manager = state_manager
        self.content_generator = content_generator
        self.system_logger = system_logger
        self.assessment = assessment
        self.parent_facade = (
            parent_facade  # –ò–°–ü–†–ê–í–õ–ï–ù–û –≠–¢–ê–ü 34: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ facade
        )
        self.logger = logging.getLogger(__name__)

        # –£—Ç–∏–ª–∏—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.utils = InterfaceUtils()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–º–æ–¥—É–ª–µ–π
        self.interactive_handlers = LessonInteractiveHandlers(
            content_generator=content_generator,
            state_manager=state_manager,
            utils=self.utils,
            logger=self.logger,
        )

        self.content_manager = LessonContentManager(
            state_manager=state_manager, logger=self.logger
        )

        self.lesson_utils = LessonUtils(interface_utils=self.utils, logger=self.logger)

        # –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞
        self.current_lesson_data = None
        self.current_lesson_content = None
        self.current_course_info = None
        self.current_lesson_id = None

        self.logger.info("LessonInterface –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–¥–º–æ–¥—É–ª—è–º–∏")

    def show_lesson(self, section_id, topic_id, lesson_id):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

        Args:
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞

        Returns:
            widgets.VBox: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Ä–æ–∫–∞
        """
        try:
            self.logger.info(
                f"üöÄ –ù–ê–ß–ê–õ–û: –ü–æ–∫–∞–∑ —É—Ä–æ–∫–∞ {section_id}:{topic_id}:{lesson_id}"
            )

            # –®–ê–ì 1: –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞–Ω –∫—É—Ä—Å–∞
            self.logger.info("üìã –®–ê–ì 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∫—É—Ä—Å–∞...")
            course_plan = self._get_course_plan()
            if not course_plan:
                self.logger.error("‚ùå –®–ê–ì 1: –ü–ª–∞–Ω –∫—É—Ä—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                return self._create_error_interface(
                    "–û—à–∏–±–∫–∞ –∫—É—Ä—Å–∞", "–ü–ª–∞–Ω –∫—É—Ä—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                )
            self.logger.info("‚úÖ –®–ê–ì 1: –ü–ª–∞–Ω –∫—É—Ä—Å–∞ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")

            # –®–ê–ì 2: –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            self.logger.info("üìù –®–ê–ì 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤...")
            try:
                (
                    course_title,
                    section_title,
                    topic_title,
                    lesson_title,
                ) = self.lesson_utils.get_element_titles_from_plan(
                    course_plan, section_id, topic_id, lesson_id
                )
                self.logger.info(f"‚úÖ –®–ê–ì 2: –ù–∞–∑–≤–∞–Ω–∏—è –∏–∑–≤–ª–µ—á–µ–Ω—ã - {lesson_title}")
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 2: –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π: {str(e)}")
                raise

            # –®–ê–ì 3: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ –∏–∑ –ø–ª–∞–Ω–∞
            self.logger.info("üìä –®–ê–ì 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞ –∏–∑ –ø–ª–∞–Ω–∞...")
            try:
                lesson_data = self.lesson_utils.get_lesson_from_plan(
                    course_plan, section_id, topic_id, lesson_id
                )
                self.logger.info(f"‚úÖ –®–ê–ì 3: –î–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ –ø–æ–ª—É—á–µ–Ω—ã: {type(lesson_data)}")
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 3: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞: {str(e)}")
                raise

            # –®–ê–ì 4: –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.logger.info("üë§ –®–ê–ì 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            try:
                user_profile = self._get_user_profile()
                self.logger.info(f"‚úÖ –®–ê–ì 4: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω: {type(user_profile)}")
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 4: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}")
                raise

            # –®–ê–ì 5: –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
            self.logger.info("üìñ –®–ê–ì 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞...")
            try:
                lesson_content_data = self.content_manager.get_lesson_content(
                    section_id, topic_id, lesson_id, self.content_generator
                )
                self.logger.info(
                    f"‚úÖ –®–ê–ì 5: –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –ø–æ–ª—É—á–µ–Ω–æ: {type(lesson_content_data)}"
                )
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 5: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è: {str(e)}")
                raise

            # –®–ê–ì 6: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞
            self.logger.info("üîç –®–ê–ì 6: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞...")
            try:
                is_valid, error_msg = self.lesson_utils.validate_lesson_data(
                    lesson_content_data, lesson_data
                )
                if not is_valid:
                    self.logger.error(f"‚ùå –®–ê–ì 6: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞: {error_msg}")
                    return self._create_error_interface(
                        "–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞", error_msg
                    )
                self.logger.info("‚úÖ –®–ê–ì 6: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 6: –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}")
                raise

            # –®–ê–ì 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–µ–º–æ-—è—á–µ–µ–∫
            self.logger.info("üîß –®–ê–ì 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–µ–º–æ-—è—á–µ–µ–∫...")
            try:
                lesson_content_data = self.content_manager.integrate_demo_cells(
                    lesson_content_data, lesson_id
                )
                self.logger.info("‚úÖ –®–ê–ì 7: –î–µ–º–æ-—è—á–µ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 7: –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–µ–º–æ-—è—á–µ–µ–∫: {str(e)}")
                raise

            # –®–ê–ì 8: –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
            self.logger.info("üíæ –®–ê–ì 8: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞...")
            try:
                self._store_lesson_data(
                    lesson_content_data,
                    course_title,
                    section_title,
                    topic_title,
                    lesson_title,
                    section_id,
                    topic_id,
                    lesson_id,
                    user_profile,
                    course_plan,
                )
                self.logger.info("‚úÖ –®–ê–ì 8: –î–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 8: –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
                raise

            # –®–ê–ì 9: –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
            self.logger.info("üìà –®–ê–ì 9: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è...")
            try:
                if hasattr(self.content_manager, "update_lesson_progress"):
                    self.content_manager.update_lesson_progress(
                        "unknown", section_id, topic_id, lesson_id
                    )
                self.logger.info("‚úÖ –®–ê–ì 9: –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω")
            except Exception as e:
                self.logger.warning(
                    f"‚ö†Ô∏è –®–ê–ì 9: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ): {str(e)}"
                )

            # –®–ê–ì 10: –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Ä–æ–∫–∞
            self.logger.info("üé® –®–ê–ì 10: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —É—Ä–æ–∫–∞...")
            try:
                lesson_interface = self._create_lesson_interface(
                    lesson_content_data,
                    lesson_data,
                    course_title,
                    section_title,
                    topic_title,
                    lesson_title,
                    section_id,
                    topic_id,
                    lesson_id,
                    user_profile,
                )
                self.logger.info("‚úÖ –®–ê–ì 10: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Ä–æ–∫–∞ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
                self.logger.info("üéâ –£–†–û–ö –ì–û–¢–û–í –ö –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Æ!")
                return lesson_interface
            except Exception as e:
                self.logger.error(f"‚ùå –®–ê–ì 10: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {str(e)}")
                raise

        except Exception as e:
            error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —É—Ä–æ–∫–∞: {str(e)}"
            self.logger.error(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {error_msg}")
            self.logger.error(f"üìã Traceback: {traceback.format_exc()}")
            return self._create_error_interface("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", error_msg)

    def _create_lesson_interface(
        self,
        lesson_content_data,
        lesson_data,
        course_title,
        section_title,
        topic_title,
        lesson_title,
        section_id,
        topic_id,
        lesson_id,
        user_profile,
    ):
        """
        –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Ä–æ–∫–∞.

        Args:
            lesson_content_data (dict): –î–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞
            lesson_data (dict): –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
            course_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
            section_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
            topic_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
            lesson_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞
            user_profile (dict): –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            widgets.VBox: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Ä–æ–∫–∞
        """
        try:
            self.logger.info("üé® –°–û–ó–î–ê–ù–ò–ï –ò–ù–¢–ï–†–§–ï–ô–°–ê: –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")

            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ä–æ–∫–∞
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É—Ä–æ–∫–∞...")
            lesson_header = self.lesson_utils.create_lesson_header(lesson_title)
            self.logger.info("‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ä–æ–∫–∞ —Å–æ–∑–¥–∞–Ω")

            # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...")
            estimated_time = f"‚è±Ô∏è {lesson_content_data.get('estimated_time', 30)} –º–∏–Ω."
            nav_info = self.lesson_utils.create_navigation_info(
                course_title, section_title, topic_title, lesson_title, estimated_time
            )
            self.logger.info("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")

            # –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞...")
            lesson_content = self.lesson_utils.create_lesson_content(
                lesson_content_data
            )
            self.logger.info("‚úÖ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ —Å–æ–∑–¥–∞–Ω–æ")

            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫...")
            interactive_buttons = self.lesson_utils.create_interactive_buttons(
                self.interactive_handlers
            )
            self.logger.info("‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")

            # –ò–°–ü–†–ê–í–õ–ï–ù–û –≠–¢–ê–ü 43: –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å) - —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –æ—à–∏–±–æ–∫
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π...")
            control_tasks_interface = None
            try:
                control_tasks_interface = (
                    self.content_manager.get_control_tasks_interface(
                        lesson_id, self.current_course_info
                    )
                )
                if control_tasks_interface:
                    self.logger.info("‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã")
                else:
                    self.logger.info("‚ÑπÔ∏è –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω—ã –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
            except Exception as e:
                self.logger.warning(
                    f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ): {str(e)}"
                )
                control_tasks_interface = None

            # –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
            assessment_button = self.lesson_utils.create_assessment_button(
                self.assessment, lesson_data, self.current_course_info
            )
            self.logger.info("‚úÖ –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞")

            # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            self.logger.info("üé® –°–±–æ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
            interface_components = [
                lesson_header,
                nav_info,
                lesson_content,
                interactive_buttons,
            ]

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
            if control_tasks_interface:
                interface_components.append(control_tasks_interface)
                self.logger.info("‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            interface_components.append(assessment_button)
            self.logger.info("‚úÖ –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

            # –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π VBox
            self.logger.info("üé® –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ VBox...")
            final_interface = widgets.VBox(
                interface_components,
                layout=widgets.Layout(margin="0 auto", max_width="900px"),
            )
            self.logger.info("‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π VBox —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏
            self.logger.info(
                f"üîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê: –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {type(final_interface)}"
            )
            self.logger.info(
                f"üîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {len(interface_components)}"
            )
            self.logger.info("üéâ –ò–ù–¢–ï–†–§–ï–ô–° –£–†–û–ö–ê –ì–û–¢–û–í –î–õ–Ø –í–û–ó–í–†–ê–¢–ê!")

            return final_interface

        except Exception as e:
            self.logger.error(
                f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ _create_lesson_interface: {str(e)}"
            )
            self.logger.error(f"üìã Traceback: {traceback.format_exc()}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—à–∏–±–∫–∏ –≤–º–µ—Å—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            return self._create_error_interface("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", str(e))

    def _create_error_interface(self, error_title, error_message):
        """
        –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—à–∏–±–∫–∏.

        Args:
            error_title (str): –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏
            error_message (str): –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

        Returns:
            widgets.VBox: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—à–∏–±–∫–∏
        """
        return self.lesson_utils.create_lesson_error_interface(
            error_title, error_message
        )

    def get_current_lesson_info(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–∫–µ.

        Returns:
            dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–∫–µ
        """
        return {
            "lesson_id": self.current_lesson_id,
            "course_info": self.current_course_info,
            "has_content": self.current_lesson_content is not None,
            "cache_info": self.content_manager.get_cache_info(),
        }

    def clear_lesson_cache(self):
        """–û—á–∏—â–∞–µ—Ç –∫—ç—à —É—Ä–æ–∫–∞."""
        self.content_manager.clear_cache()
        self.current_lesson_data = None
        self.current_lesson_content = None
        self.current_course_info = None
        self.current_lesson_id = None
        self.logger.info("–ö—ç—à —É—Ä–æ–∫–∞ –æ—á–∏—â–µ–Ω")

    def _get_course_plan(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –ø–ª–∞–Ω –∫—É—Ä—Å–∞ –∏–∑ StateManager.

        Returns:
            dict: –ü–ª–∞–Ω –∫—É—Ä—Å–∞ –∏–ª–∏ None
        """
        try:
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞ –∫—É—Ä—Å–∞
            if hasattr(self.state_manager, "get_course_plan"):
                return self.state_manager.get_course_plan()
            elif hasattr(self.state_manager, "course_data_manager"):
                return self.state_manager.course_data_manager.get_course_plan()
            elif (
                hasattr(self.state_manager, "state")
                and "course_plan" in self.state_manager.state
            ):
                return self.state_manager.state["course_plan"]
            else:
                self.logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞ –∫—É—Ä—Å–∞")
                return None

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞ –∫—É—Ä—Å–∞: {str(e)}")
            return None

    def _get_user_profile(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        Returns:
            dict: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            if hasattr(self.state_manager, "get_user_profile"):
                return self.state_manager.get_user_profile()
            elif hasattr(self.state_manager, "get_user_data"):
                return self.state_manager.get_user_data()
            else:
                self.logger.warning("–ú–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                return {}
        except Exception as e:
            self.logger.warning(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
            return {}

    def _store_lesson_data(
        self,
        lesson_content_data,
        course_title,
        section_title,
        topic_title,
        lesson_title,
        section_id,
        topic_id,
        lesson_id,
        user_profile,
        course_plan,
    ):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞."""
        self.current_lesson_data = {
            "lesson_content_data": lesson_content_data,
            "course_title": course_title,
            "section_title": section_title,
            "topic_title": topic_title,
            "lesson_title": lesson_title,
            "section_id": section_id,
            "topic_id": topic_id,
            "lesson_id": lesson_id,
            "user_profile": user_profile,
        }
        self.current_lesson_content = lesson_content_data
        self.current_course_info = {
            "course_title": course_title,
            "course_plan": course_plan,
            "current_lesson": lesson_title,
        }
        self.current_lesson_id = lesson_id
