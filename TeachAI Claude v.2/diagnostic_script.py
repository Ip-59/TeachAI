# –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ò–ù–¢–ï–†–§–ï–ô–°–û–í")
print("=" * 60)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
try:
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π...")
    import logging
    from interface_utils import InterfaceState
    import ipywidgets as widgets

    print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π: {e}")
    exit()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç lesson_interface
try:
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ lesson_interface...")
    from lesson_interface import LessonInterface

    print("‚úÖ LessonInterface –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ LessonInterface: {e}")
    print("üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
    import traceback

    traceback.print_exc()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç assessment_interface
try:
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ assessment_interface...")
    from assessment_interface import AssessmentInterface

    print("‚úÖ AssessmentInterface –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ AssessmentInterface: {e}")
    print("üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
    import traceback

    traceback.print_exc()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é interface_facade
try:
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è InterfaceFacade...")
    from interface_facade import InterfaceFacade

    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    class MockStateManager:
        pass

    class MockContentGenerator:
        pass

    class MockAssessment:
        pass

    class MockSystemLogger:
        def log_lesson(self, **kwargs):
            pass

    state_manager = MockStateManager()
    content_generator = MockContentGenerator()
    assessment = MockAssessment()
    system_logger = MockSystemLogger()

    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ñ–∞—Å–∞–¥
    facade = InterfaceFacade(
        state_manager, content_generator, assessment, system_logger
    )

    print(f"‚úÖ InterfaceFacade —Å–æ–∑–¥–∞–Ω: {type(facade)}")
    print(
        f"üìä lesson_interface: {type(facade.lesson_interface) if facade.lesson_interface else 'None'}"
    )
    print(
        f"üìä assessment_interface: {type(facade.assessment_interface) if facade.assessment_interface else 'None'}"
    )

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è InterfaceFacade: {e}")
    print("üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
    import traceback

    traceback.print_exc()

print("\n" + "=" * 60)
print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
print("\n–ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ, —Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º –º–æ–¥—É–ª–µ.")
print("–ù–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ - —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ assessment_interface.py")
