"""
–Ø–¥—Ä–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞.
–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –ø—Ä–æ—Ñ–∏–ª—è.
"""

import ipywidgets as widgets
from IPython.display import display, clear_output
import logging
from datetime import datetime
from interface_utils import InterfaceUtils, InterfaceState


class StudentProfileCore:
    """
    –Ø–¥—Ä–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞.
    –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
    """

    def __init__(
        self, state_manager, content_generator, system_logger, assessment=None
    ):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–¥—Ä–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.

        Args:
            state_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
            content_generator: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            system_logger: –°–∏—Å—Ç–µ–º–Ω—ã–π –ª–æ–≥–≥–µ—Ä
            assessment: –ú–æ–¥—É–ª—å –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        """
        self.state_manager = state_manager
        self.content_generator = content_generator
        self.system_logger = system_logger
        self.assessment = assessment
        self.logger = logging.getLogger(__name__)

        # –£—Ç–∏–ª–∏—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.utils = InterfaceUtils()

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.main_container = None

        # –í—ã—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.output_container = widgets.Output()

        self.logger.info("StudentProfileCore –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def create_main_profile_interface(self):
        """
        –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞.

        Returns:
            widgets.VBox: –ü–æ–ª–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
        """
        try:
            self.logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")

            # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            header = self.utils.create_header("üìä –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
            progress_data = self._get_progress_data()
            detailed_stats = self._get_detailed_statistics()

            # –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ü–∏–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–º–µ—Ç–æ–¥—ã –±—É–¥—É—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω—ã –≤ sections)
            profile_info = self._create_profile_info_section(progress_data)
            course_progress = self._create_course_progress_section(detailed_stats)
            lessons_statistics = self._create_lessons_statistics_section(detailed_stats)
            control_tasks_stats = self._create_control_tasks_section(detailed_stats)
            detailed_breakdown = self._create_detailed_breakdown_section()

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (–º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω –≤ handlers)
            action_buttons = self._create_action_buttons()

            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            self.main_container = widgets.VBox(
                [
                    header,
                    profile_info,
                    course_progress,
                    lessons_statistics,
                    control_tasks_stats,
                    detailed_breakdown,
                    action_buttons,
                    self.output_container,
                ],
                layout=widgets.Layout(gap="20px", padding="20px"),
            )

            self.logger.info("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
            return self.main_container

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞: {str(e)}")
            return self._create_error_interface(str(e))

    def _get_progress_data(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è.

        Returns:
            dict: –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        """
        try:
            return self.state_manager.learning_progress.get_learning_progress()
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {str(e)}")
            return {}

    def _get_detailed_statistics(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫—É—Ä—Å—É.

        Returns:
            dict: –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        """
        try:
            return self.state_manager.learning_progress.get_detailed_course_statistics()
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")
            return {}

    def _get_user_profile_data(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        Returns:
            dict: –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            return self.state_manager.user_profile.get_user_profile()
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
            return {"name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}

    def _create_error_interface(self, error_message):
        """
        –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—à–∏–±–∫–∏.

        Args:
            error_message (str): –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

        Returns:
            widgets.VBox: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—à–∏–±–∫–∏
        """
        error_widget = widgets.HTML(
            value=f"""
            <div style="
                background-color: #f8d7da;
                color: #721c24;
                padding: 20px;
                border-radius: 8px;
                border: 1px solid #f5c6cb;
                text-align: center;
            ">
                <h3>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞</h3>
                <p>{error_message}</p>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
            </div>
            """
        )

        return widgets.VBox([error_widget], layout=widgets.Layout(padding="20px"))

    def validate_dependencies(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.

        Returns:
            dict: –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        """
        dependencies = {
            "state_manager": self.state_manager is not None,
            "content_generator": self.content_generator is not None,
            "system_logger": self.system_logger is not None,
            "utils": self.utils is not None,
        }

        dependencies["all_dependencies"] = all(dependencies.values())

        self.logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {dependencies}")
        return dependencies

    def get_status(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —è–¥—Ä–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

        Returns:
            dict: –°—Ç–∞—Ç—É—Å —è–¥—Ä–∞
        """
        return {
            "core_initialized": True,
            "dependencies": self.validate_dependencies(),
            "main_container_created": self.main_container is not None,
            "logger_name": self.logger.name,
        }

    # ========================================
    # –ú–ï–¢–û–î–´-–ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –î–ï–õ–ï–ì–ò–†–û–í–ê–ù–ò–Ø
    # (–ë—É–¥—É—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ —Ñ–∞—Å–∞–¥–µ)
    # ========================================

    def _create_profile_info_section(self, progress_data):
        """–ó–∞–≥–ª—É—à–∫–∞ - –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ sections."""
        return widgets.HTML(value="<div>Profile info section placeholder</div>")

    def _create_course_progress_section(self, detailed_stats):
        """–ó–∞–≥–ª—É—à–∫–∞ - –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ sections."""
        return widgets.HTML(value="<div>Course progress section placeholder</div>")

    def _create_lessons_statistics_section(self, detailed_stats):
        """–ó–∞–≥–ª—É—à–∫–∞ - –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ sections."""
        return widgets.HTML(value="<div>Lessons statistics section placeholder</div>")

    def _create_control_tasks_section(self, detailed_stats):
        """–ó–∞–≥–ª—É—à–∫–∞ - –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ sections."""
        return widgets.HTML(value="<div>Control tasks section placeholder</div>")

    def _create_detailed_breakdown_section(self):
        """–ó–∞–≥–ª—É—à–∫–∞ - –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ sections."""
        return widgets.HTML(value="<div>Detailed breakdown section placeholder</div>")

    def _create_action_buttons(self):
        """–ó–∞–≥–ª—É—à–∫–∞ - –±—É–¥–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ handlers."""
        return widgets.HBox([])
