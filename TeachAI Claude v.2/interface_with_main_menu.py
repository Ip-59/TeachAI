"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ipywidgets.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ Jupyter Notebook.

–ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ç–µ–ø–µ—Ä—å —Å–ª—É–∂–∏—Ç —Ñ–∞—Å–∞–¥–æ–º –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.
–ù–û–í–û–ï: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤
–ù–û–í–û–ï: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞
–ù–û–í–û–ï: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏
"""

import ipywidgets as widgets
from IPython.display import display, clear_output
import logging
from datetime import datetime
import re
import traceback

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
from interface_utils import InterfaceState, InterfaceUtils
from setup_interface import SetupInterface
from lesson_interface import LessonInterface
from assessment_interface import AssessmentInterface
from completion_interface import CompletionInterface

# –ù–û–í–û–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
try:
    from main_menu_interface import MainMenuInterface

    MAIN_MENU_AVAILABLE = True
except ImportError:
    logging.warning("–ú–æ–¥—É–ª—å main_menu_interface –Ω–µ –Ω–∞–π–¥–µ–Ω")
    MAIN_MENU_AVAILABLE = False

    class MainMenuInterface:
        def __init__(self, *args, **kwargs):
            pass

        def show_main_menu(self):
            return widgets.HTML("<p>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</p>")


try:
    from student_profile_interface import StudentProfileInterface

    STUDENT_PROFILE_AVAILABLE = True
except ImportError:
    logging.warning("–ú–æ–¥—É–ª—å student_profile_interface –Ω–µ –Ω–∞–π–¥–µ–Ω")
    STUDENT_PROFILE_AVAILABLE = False

    class StudentProfileInterface:
        def __init__(self, *args, **kwargs):
            pass

        def show_student_profile(self):
            return widgets.HTML("<p>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>")


class UserInterface:
    """
    –§–∞—Å–∞–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

    –í–ê–ñ–ù–û: –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π.
    –í—Å–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ —Ä–∞–Ω—å—à–µ!
    """

    def __init__(self, state_manager, content_generator, assessment, system_logger):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

        Args:
            state_manager (StateManager): –û–±—ä–µ–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            content_generator (ContentGenerator): –û–±—ä–µ–∫—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            assessment (Assessment): –û–±—ä–µ–∫—Ç –º–æ–¥—É–ª—è –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏—è
            system_logger (Logger): –û–±—ä–µ–∫—Ç –ª–æ–≥–≥–µ—Ä–∞
        """
        self.state_manager = state_manager
        self.content_generator = content_generator
        self.assessment = assessment
        self.system_logger = system_logger
        self.logger = logging.getLogger(__name__)

        # –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.current_state = InterfaceState.INITIAL_SETUP

        # –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        self.current_course = None
        self.current_section = None
        self.current_topic = None
        self.current_lesson = None
        self.current_lesson_content = None
        self.current_questions = None
        self.current_answers = []

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        try:
            self.logger.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...")

            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"üîç –û–¢–õ–ê–î–ö–ê UserInterface.__init__:")
            print(f"üîç assessment = {assessment}")
            print(f"üîç type(assessment) = {type(assessment)}")

            self.setup_interface = SetupInterface(
                state_manager, content_generator, system_logger, assessment
            )
            self.lesson_interface = LessonInterface(
                state_manager, content_generator, system_logger, assessment
            )
            self.assessment_interface = AssessmentInterface(
                state_manager, assessment, system_logger
            )
            self.completion_interface = CompletionInterface(
                state_manager, system_logger, content_generator, assessment
            )

            # –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
            if MAIN_MENU_AVAILABLE:
                self.main_menu_interface = MainMenuInterface(
                    state_manager, content_generator, system_logger, assessment
                )
            else:
                self.main_menu_interface = None

            if STUDENT_PROFILE_AVAILABLE:
                self.student_profile_interface = StudentProfileInterface(
                    state_manager, content_generator, system_logger, assessment
                )
            else:
                self.student_profile_interface = None

            self.logger.info("UserInterface (—Ñ–∞—Å–∞–¥) —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UserInterface: {str(e)}")
            raise

        # –£—Ç–∏–ª–∏—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.utils = InterfaceUtils()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        self.styles = {
            "correct": "background-color: #d4edda; color: #155724; padding: 10px; border-radius: 5px; margin: 5px 0;",
            "incorrect": "background-color: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; margin: 5px 0;",
            "info": "background-color: #d1ecf1; color: #0c5460; padding: 10px; border-radius: 5px; margin: 5px 0;",
            "warning": "background-color: #fff3cd; color: #856404; padding: 10px; border-radius: 5px; margin: 5px 0;",
            "header": "font-size: 24px; font-weight: bold; color: #495057; margin: 20px 0 10px 0;",
            "subheader": "font-size: 18px; font-weight: bold; color: #6c757d; margin: 15px 0 10px 0;",
            "button": "font-weight: bold;",
        }

    # ========================================
    # –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ - –û–ë–†–ê–¢–ù–ê–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨
    # ========================================

    def show_initial_setup(self):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ñ–æ—Ä–º—É –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç —Å —Ñ–æ—Ä–º–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        """
        self.current_state = InterfaceState.INITIAL_SETUP
        return self.setup_interface.show_initial_setup()

    def show_course_selection(self):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞.

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
        """
        self.current_state = InterfaceState.COURSE_SELECTION
        return self.setup_interface.show_course_selection()

    def show_lesson(self, section_id, topic_id, lesson_id):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É—Ä–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

        Args:
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç —Å —É—Ä–æ–∫–æ–º
        """
        self.current_state = InterfaceState.LESSON_VIEW
        return self.lesson_interface.show_lesson(section_id, topic_id, lesson_id)

    def show_assessment(self, section_id, topic_id, lesson_id):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

        Args:
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç —Å —Ç–µ—Å—Ç–æ–º
        """
        self.current_state = InterfaceState.ASSESSMENT
        return self.assessment_interface.show_assessment(
            section_id, topic_id, lesson_id
        )

    def show_completion(self, lesson_data, test_results):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞.

        Args:
            lesson_data (dict): –î–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
            test_results (dict): –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
        """
        self.current_state = InterfaceState.COMPLETION
        return self.completion_interface.show_completion(lesson_data, test_results)

    # ========================================
    # –ù–û–í–´–ï –ú–ï–¢–û–î–´ - –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –ò –õ–ò–ß–ù–´–ô –ö–ê–ë–ò–ù–ï–¢
    # ========================================

    def show_main_menu(self):
        """
        –ù–û–í–û–ï: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤.

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        """
        try:
            self.current_state = InterfaceState.MAIN_MENU

            if self.main_menu_interface and MAIN_MENU_AVAILABLE:
                return self.main_menu_interface.show_main_menu()
            else:
                # Fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–±–æ—Ä –∫—É—Ä—Å–∞
                self.logger.warning("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞")
                return self.show_course_selection()

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {str(e)}")
            return self._create_fallback_menu()

    def show_student_profile(self):
        """
        –ù–û–í–û–ï: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞.

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
        """
        try:
            self.current_state = InterfaceState.STUDENT_PROFILE

            if self.student_profile_interface and STUDENT_PROFILE_AVAILABLE:
                return self.student_profile_interface.show_student_profile()
            else:
                # Fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                self.logger.warning(
                    "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑ fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
                )
                return self._create_fallback_profile()

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞: {str(e)}")
            return self._create_fallback_profile()

    def navigate_to_lesson(self, section_id, topic_id, lesson_id):
        """
        –ù–û–í–û–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ —É—Ä–æ–∫—É –∏–∑ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.

        Args:
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç —É—Ä–æ–∫–∞
        """
        try:
            self.logger.info(f"–ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ —É—Ä–æ–∫—É: {section_id}:{topic_id}:{lesson_id}")
            return self.show_lesson(section_id, topic_id, lesson_id)
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —É—Ä–æ–∫—É: {str(e)}")
            return self.utils.create_styled_message(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —É—Ä–æ–∫—É: {str(e)}", "incorrect"
            )

    def navigate_to_course_selection(self):
        """
        –ù–û–í–û–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
        """
        try:
            self.logger.info("–ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞")
            return self.show_course_selection()
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞: {str(e)}")
            return self.utils.create_styled_message(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞: {str(e)}", "incorrect"
            )

    def navigate_to_main_menu(self):
        """
        –ù–û–í–û–ï: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        """
        try:
            self.logger.info("–ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é")
            return self.show_main_menu()
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é: {str(e)}")
            return self.utils.create_styled_message(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é: {str(e)}", "incorrect"
            )

    # ========================================
    # FALLBACK –ò–ù–¢–ï–†–§–ï–ô–°–´
    # ========================================

    def _create_fallback_menu(self):
        """
        –°–æ–∑–¥–∞–µ—Ç fallback –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

        Returns:
            widgets.VBox: Fallback –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        """
        header = self.utils.create_header("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é TeachAI")

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            user_profile = self.state_manager.user_profile.get_user_profile()
            user_name = user_profile.get("name", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        except:
            user_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

        welcome = widgets.HTML(
            value=f"""
        <div style="text-align: center; padding: 20px; background: #f8f9fa; border-radius: 10px; margin: 20px 0;">
            <h2>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!</h2>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è:</p>
        </div>
        """
        )

        # –ö–Ω–æ–ø–∫–∏
        continue_button = widgets.Button(
            description="üìö –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ",
            style={"button_color": "#007bff"},
            layout=widgets.Layout(width="300px", height="50px", margin="10px"),
        )

        courses_button = widgets.Button(
            description="üéì –í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å",
            style={"button_color": "#28a745"},
            layout=widgets.Layout(width="300px", height="50px", margin="10px"),
        )

        output = widgets.Output()

        def on_continue_clicked(b):
            with output:
                clear_output(wait=True)
                display(
                    self.utils.create_styled_message(
                        "–ü–æ–∏—Å–∫ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —É—Ä–æ–∫–∞...", "info"
                    )
                )

        def on_courses_clicked(b):
            with output:
                clear_output(wait=True)
                display(self.show_course_selection())

        continue_button.on_click(on_continue_clicked)
        courses_button.on_click(on_courses_clicked)

        buttons_container = widgets.VBox(
            [continue_button, courses_button],
            layout=widgets.Layout(align_items="center"),
        )

        return widgets.VBox([header, welcome, buttons_container, output])

    def _create_fallback_profile(self):
        """
        –°–æ–∑–¥–∞–µ—Ç fallback –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

        Returns:
            widgets.VBox: Fallback –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
        """
        header = self.utils.create_header("üìä –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)")

        try:
            # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            progress = self.state_manager.learning_progress.get_learning_progress()
            course_progress = (
                self.state_manager.learning_progress.calculate_course_progress()
            )

            stats_html = f"""
            <div style="background: white; padding: 20px; border-radius: 10px; border: 1px solid #ddd;">
                <h3>üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è</h3>
                <p><strong>–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å:</strong> {progress.get('current_course', '–ù–µ –≤—ã–±—Ä–∞–Ω')}</p>
                <p><strong>–ü—Ä–æ–≥—Ä–µ—Å—Å:</strong> {course_progress.get('percent', 0):.1f}%</p>
                <p><strong>–ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤:</strong> {course_progress.get('completed', 0)} –∏–∑ {course_progress.get('total', 0)}</p>
                <p><strong>–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª:</strong> {progress.get('average_score', 0):.1f}%</p>
            </div>
            """

            stats_widget = widgets.HTML(value=stats_html)

        except Exception as e:
            stats_widget = self.utils.create_styled_message(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}", "warning"
            )

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        back_button = widgets.Button(
            description="üîô –ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é",
            style={"button_color": "#6c757d"},
            layout=widgets.Layout(width="250px", margin="20px 0"),
        )

        output = widgets.Output()

        def on_back_clicked(b):
            with output:
                clear_output(wait=True)
                display(self.show_main_menu())

        back_button.on_click(on_back_clicked)

        return widgets.VBox(
            [header, stats_widget, back_button, output],
            layout=widgets.Layout(gap="15px"),
        )

    # ========================================
    # –£–°–¢–ê–†–ï–í–®–ò–ï –ú–ï–¢–û–î–´ - –û–ë–†–ê–¢–ù–ê–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨
    # ========================================

    def create_styled_button(self, description, style="default"):
        """–£–°–¢–ê–†–ï–í–®–ò–ô: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ utils.create_button()"""
        return self.utils.create_button(description, style)

    def create_styled_message(self, message, style="info"):
        """–£–°–¢–ê–†–ï–í–®–ò–ô: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ utils.create_styled_message()"""
        return self.utils.create_styled_message(message, style)

    def create_header(self, text):
        """–£–°–¢–ê–†–ï–í–®–ò–ô: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ utils.create_header()"""
        return self.utils.create_header(text)

    def create_progress_bar(self, current, total, description=""):
        """–£–°–¢–ê–†–ï–í–®–ò–ô: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ utils.create_progress_bar()"""
        return self.utils.create_progress_bar(current, total, description)

    def display_course_plan(self, course_plan):
        """
        –£–°–¢–ê–†–ï–í–®–ò–ô: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–ª–∞–Ω –∫—É—Ä—Å–∞ (–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏).

        Args:
            course_plan (dict): –ü–ª–∞–Ω –∫—É—Ä—Å–∞

        Returns:
            widgets.VBox: –í–∏–¥–∂–µ—Ç —Å –ø–ª–∞–Ω–æ–º –∫—É—Ä—Å–∞
        """
        # –î–µ–ª–µ–≥–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å setup_interface
        return self.setup_interface._display_course_plan(course_plan)

    def get_current_state(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

        Returns:
            InterfaceState: –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        """
        return self.current_state

    def set_current_state(self, state):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

        Args:
            state (InterfaceState): –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        """
        self.current_state = state
        self.logger.debug(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {state}")
