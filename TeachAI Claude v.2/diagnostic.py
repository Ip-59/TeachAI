"""
–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã #121
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ Jupyter Notebook –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
"""

import os
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("diagnostic")


def diagnose_state_file():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–∞ state.json"""
    print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–ê–ô–õ–ê STATE.JSON ===\n")

    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    state_file = os.path.join("data", "state.json")

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if os.path.exists(state_file):
        print(f"‚úÖ –§–∞–π–ª {state_file} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print(f"   –†–∞–∑–º–µ—Ä: {os.path.getsize(state_file)} –±–∞–π—Ç")
        print(f"   –ü—É—Ç—å: {os.path.abspath(state_file)}\n")
    else:
        print(f"‚ùå –§–∞–π–ª {state_file} –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print(f"   –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {os.path.abspath(state_file)}\n")
        return

    # 2. –ß—Ç–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    try:
        with open(state_file, "r", encoding="utf-8") as f:
            state_data = json.load(f)

        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω –∫–∞–∫ JSON")
        print(f"   –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è: {list(state_data.keys())}\n")

        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã user (–ò–°–ü–†–ê–í–õ–ï–ù–û)
        if "user" in state_data:
            user = state_data["user"]
            print("üìã –î–∞–Ω–Ω—ã–µ user:")
            print(f"   - name: {user.get('name', '–ù–ï –ù–ê–ô–î–ï–ù–û')}")
            print(
                f"   - total_study_hours: {user.get('total_study_hours', '–ù–ï –ù–ê–ô–î–ï–ù–û')}"
            )
            print(
                f"   - lesson_duration_minutes: {user.get('lesson_duration_minutes', '–ù–ï –ù–ê–ô–î–ï–ù–û')}"
            )
            print(
                f"   - communication_style: {user.get('communication_style', '–ù–ï –ù–ê–ô–î–ï–ù–û')}\n"
            )
        else:
            print("‚ùå –ö–ª—é—á 'user' –ù–ï –ù–ê–ô–î–ï–ù –≤ state.json\n")

        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ learning (–ò–°–ü–†–ê–í–õ–ï–ù–û)
        if "learning" in state_data:
            learning = state_data["learning"]
            print("üìä –î–∞–Ω–Ω—ã–µ learning:")
            print(
                f"   - current_lesson: {learning.get('current_lesson', '–ù–ï –ù–ê–ô–î–ï–ù–û')}"
            )
            print(f"   - –ö–ª—é—á–∏ learning: {list(learning.keys())}\n")
        else:
            print("‚ùå –ö–ª—é—á 'learning' –ù–ï –ù–ê–ô–î–ï–ù –≤ state.json\n")

        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ course_plan (–ò–°–ü–†–ê–í–õ–ï–ù–û)
        if "course_plan" in state_data:
            course_plan = state_data["course_plan"]
            print("üìö –î–∞–Ω–Ω—ã–µ course_plan:")
            if course_plan:
                print(f"   - title: {course_plan.get('title', '–ù–ï –ù–ê–ô–î–ï–ù–û')}")
                print(f"   - sections: {len(course_plan.get('sections', []))} —Ä–∞–∑–¥–µ–ª–æ–≤")
            else:
                print("   - course_plan –ø—É—Å—Ç–æ–π")
            print()
        else:
            print("‚ùå –ö–ª—é—á 'course_plan' –ù–ï –ù–ê–ô–î–ï–ù –≤ state.json\n")

    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}\n")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}\n")


def test_has_user_profile_logic():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ò–ö–ò has_user_profile ===\n")

    # –≠–º—É–ª—è—Ü–∏—è –ª–æ–≥–∏–∫–∏ –∏–∑ engine.py
    try:
        from state_manager import StateManager

        # –°–æ–∑–¥–∞–µ–º StateManager —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—É—Ç–µ–º
        state_file_path = os.path.join("data", "state.json")
        sm = StateManager(state_file=state_file_path)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print("üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ StateManager:")
        print(f"   - –ö–ª—é—á–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {list(sm.state.keys())}")

        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ get_user_data()
        user_data = sm.get_user_data()
        print(f"\nüìã get_user_data() –≤–µ—Ä–Ω—É–ª:")
        print(f"   - –¢–∏–ø: {type(user_data)}")
        print(f"   - –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {user_data}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –∏–∑ engine.py
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π has_user_profile:")

        # –£—Å–ª–æ–≤–∏–µ 1: user_data –Ω–µ –ø—É—Å—Ç—ã–µ
        condition1 = bool(user_data)
        print(f"   1. user_data –Ω–µ –ø—É—Å—Ç—ã–µ: {condition1}")

        if user_data:
            # –£—Å–ª–æ–≤–∏–µ 2: name —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—É—Å—Ç–æ–µ
            name = user_data.get("name", "")
            condition2 = bool(name) and name != "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
            print(f"   2. name –≤–∞–ª–∏–¥–Ω–æ: {condition2} (name='{name}')")

            # –£—Å–ª–æ–≤–∏–µ 3: total_study_hours —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            condition3 = (
                "total_study_hours" in user_data and user_data["total_study_hours"]
            )
            print(f"   3. total_study_hours: {condition3}")

            # –£—Å–ª–æ–≤–∏–µ 4: lesson_duration_minutes —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            condition4 = (
                "lesson_duration_minutes" in user_data
                and user_data["lesson_duration_minutes"]
            )
            print(f"   4. lesson_duration_minutes: {condition4}")

            # –£—Å–ª–æ–≤–∏–µ 5: communication_style —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            condition5 = (
                "communication_style" in user_data and user_data["communication_style"]
            )
            print(f"   5. communication_style: {condition5}")

            # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            has_profile = (
                condition1 and condition2 and condition3 and condition4 and condition5
            )
        else:
            condition2 = condition3 = condition4 = condition5 = False
            print(f"   2-5. –û—Å—Ç–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: False (user_data –ø—É—Å—Ç—ã–µ)")
            has_profile = False

        print(f"\n‚úÖ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç has_user_profile: {has_profile}")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –ø—Ä–æ–≤–µ—Ä—è–µ–º learning_progress
        print(f"\nüìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ - learning_progress:")
        learning_progress = sm.get_learning_progress()
        print(f"   - learning_progress: {learning_progress}")

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ StateManager: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback

        traceback.print_exc()


def test_state_manager_creation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è StateManager –∏ —Ñ–∞–π–ª–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø STATE MANAGER ===\n")

    try:
        from state_manager import StateManager

        # –°–æ–∑–¥–∞–µ–º StateManager
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ StateManager...")
        state_file_path = os.path.join("data", "state.json")
        sm = StateManager(state_file=state_file_path)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
        if os.path.exists(state_file_path):
            print(f"‚úÖ –§–∞–π–ª {state_file_path} —Å–æ–∑–¥–∞–Ω")

            # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            with open(state_file_path, "r", encoding="utf-8") as f:
                content = json.load(f)
            print(f"   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {list(content.keys())}")
            print(f"   - user –ø—É—Å—Ç–æ–π: {not bool(content.get('user', {}))}")
        else:
            print(f"‚ùå –§–∞–π–ª {state_file_path} –ù–ï —Å–æ–∑–¥–∞–Ω")

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è...")
        test_profile = {
            "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            "total_study_hours": 10,
            "lesson_duration_minutes": 30,
            "communication_style": "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π",
        }

        result = sm.save_user_profile(test_profile)
        print(f"   - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {'‚úÖ —É—Å–ø–µ—à–Ω–æ' if result else '‚ùå –æ—à–∏–±–∫–∞'}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
        saved_profile = sm.get_user_data()
        print(f"   - –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {saved_profile}")

        # –≠–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É has_user_profile
        has_profile_result = test_has_profile_with_data(saved_profile)
        print(f"   - has_user_profile —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {has_profile_result}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()


def test_has_profile_with_data(user_data):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É has_user_profile —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    if not user_data:
        return False

    required_fields = [
        "name",
        "total_study_hours",
        "lesson_duration_minutes",
        "communication_style",
    ]

    for field in required_fields:
        if field not in user_data or not user_data[field]:
            return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ placeholder –∑–Ω–∞—á–µ–Ω–∏—è
    if user_data.get("name") == "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è":
        return False

    return True


def suggest_fixes():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é"""
    print("\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ ===\n")

    print("1. –ï—Å–ª–∏ state.json –Ω–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –ø–∞–ø–∫—É data/")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ StateManager.save_state() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏\n")

    print("2. –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è:")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ name != '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è'")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É –≤ engine.has_user_profile()\n")

    print("3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–¥–µ:")
    print("   - –í engine.py –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å get_user_data() –≤–º–µ—Å—Ç–æ get_user_profile()")
    print("   - –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ StateManager —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏")
    print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å data/state.json)\n")


# –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
if __name__ == "__main__":
    diagnose_state_file()
    print("\n" + "=" * 50 + "\n")
    test_state_manager_creation()
    print("\n" + "=" * 50 + "\n")
    test_has_user_profile_logic()
    print("\n" + "=" * 50 + "\n")
    suggest_fixes()
