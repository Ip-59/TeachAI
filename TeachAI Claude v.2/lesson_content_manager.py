"""
–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–æ–≤.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —É—Ä–æ–∫–æ–≤.

–ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ë–†–ê–ù –î–ï–ú–û-–†–ï–ñ–ò–ú - —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ API –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
–ò–°–ü–†–ê–í–õ–ï–ù–û: –î–û–ë–ê–í–õ–ï–ù –º–µ—Ç–æ–¥ integrate_demo_cells –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–µ–º–æ-—è—á–µ–µ–∫
–ò–°–ü–†–ê–í–õ–ï–ù–û: –î–û–ë–ê–í–õ–ï–ù –º–µ—Ç–æ–¥ update_lesson_progress –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
"""

import logging


class LessonContentManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–æ–≤."""

    def __init__(self, state_manager, logger=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.

        Args:
            state_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
            logger: –õ–æ–≥–≥–µ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        """
        self.state_manager = state_manager
        self.logger = logger or logging.getLogger(__name__)

        # –ö—ç—à —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞
        self.cached_lesson_content = None
        self.current_lesson_cache_key = None

        self.logger.info("LessonContentManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def get_lesson_content(self, section_id, topic_id, lesson_id, content_generator):
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º.

        –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω –¥–µ–º–æ-—Ä–µ–∂–∏–º - —Ç–µ–ø–µ—Ä—å –æ—à–∏–±–∫–∏ API –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤—ã—à–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

        Args:
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞
            content_generator: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞

        Returns:
            dict: –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞

        Raises:
            Exception: –õ—é–±—ã–µ –æ—à–∏–±–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        """
        lesson_cache_key = f"{section_id}:{topic_id}:{lesson_id}"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        if (
            self.current_lesson_cache_key == lesson_cache_key
            and self.cached_lesson_content
        ):
            self.logger.debug(
                f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ {lesson_cache_key}"
            )
            return self.cached_lesson_content

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
        self.logger.info(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞ {lesson_cache_key}")

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å content_generator
            if not content_generator:
                error_msg = f"ContentGenerator –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —É—Ä–æ–∫–∞ {lesson_cache_key}"
                self.logger.error(error_msg)
                raise ValueError(error_msg)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è generate_lesson_content
            lesson_data = {
                "id": lesson_id,
                "title": f"–£—Ä–æ–∫ {lesson_id}",
                "description": f"–£—Ä–æ–∫ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ {section_id}, —Ç–µ–º—ã {topic_id}",
            }

            user_data = {
                "communication_style": "friendly",
                "learning_style": "practical",
            }

            # –í—ã–∑—ã–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            self.logger.info(
                f"–í—ã–∑–æ–≤ content_generator.generate_lesson_content –¥–ª—è {lesson_cache_key}"
            )
            lesson_content_data = content_generator.generate_lesson_content(
                lesson_data, user_data
            )

            if not lesson_content_data:
                error_msg = f"ContentGenerator –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ä–æ–∫–∞ {lesson_cache_key}"
                self.logger.error(error_msg)
                raise ValueError(error_msg)

            # –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            self.cached_lesson_content = lesson_content_data
            self.current_lesson_cache_key = lesson_cache_key

            self.logger.info(
                f"‚úÖ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ {lesson_cache_key} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ"
            )
            return lesson_content_data

        except Exception as e:
            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω –¥–µ–º–æ-—Ä–µ–∂–∏–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            if "Connection error" in str(e):
                self.logger.error(
                    "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI API"
                )
                self.logger.error("üîß –ü–†–û–í–ï–†–¨–¢–ï:")
                self.logger.error("   1) API –∫–ª—é—á OpenAI –≤ .env —Ñ–∞–π–ª–µ")
                self.logger.error("   2) –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
                self.logger.error("   3) –°—Ç–∞—Ç—É—Å OpenAI API (https://status.openai.com)")
                self.logger.error("   4) –õ–∏–º–∏—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API")
            elif "timeout" in str(e).lower():
                self.logger.error(
                    "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç API"
                )
                self.logger.error(
                    "üîß –ü–û–ü–†–û–ë–£–ô–¢–ï: –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
                )
            elif "rate limit" in str(e).lower():
                self.logger.error("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ OpenAI API")
                self.logger.error(
                    "üîß –ü–û–î–û–ñ–î–ò–¢–ï: –ù–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º"
                )
            else:
                self.logger.error(
                    f"üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É—Ä–æ–∫–∞: {str(e)}"
                )
                self.logger.error("üîß –ü–†–û–í–ï–†–¨–¢–ï: –õ–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")

            # –ü–µ—Ä–µ–¥–∞–µ–º –æ—à–∏–±–∫—É –≤—ã—à–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            raise

    def integrate_demo_cells(self, lesson_content_data, lesson_id):
        """
        –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –¥–µ–º–æ-—è—á–µ–π–∫–∏ –≤ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞.

        Args:
            lesson_content_data (dict): –î–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞
            lesson_id (str): ID —É—Ä–æ–∫–∞

        Returns:
            dict: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–µ–º–æ-—è—á–µ–π–∫–∞–º–∏
        """
        try:
            self.logger.info(f"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–µ–º–æ-—è—á–µ–µ–∫ –¥–ª—è —É—Ä–æ–∫–∞ {lesson_id}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if not lesson_content_data:
                self.logger.warning("lesson_content_data –ø—É—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å")
                return lesson_content_data

            # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö
            # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–µ–º–æ-—è—á–µ–µ–∫
            # –∏–∑ demo_cell_widget.py –≤ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞

            # –í–†–ï–ú–ï–ù–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø: –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –µ—Å—Ç—å
            # —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            self.logger.info("–î–µ–º–æ-—è—á–µ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã (–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)")
            return lesson_content_data

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–µ–º–æ-—è—á–µ–µ–∫: {str(e)}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            return lesson_content_data

    def update_lesson_progress(self, course_id, section_id, topic_id, lesson_id):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è —É—Ä–æ–∫–∞.

        Args:
            course_id (str): ID –∫—É—Ä—Å–∞
            section_id (str): ID —Ä–∞–∑–¥–µ–ª–∞
            topic_id (str): ID —Ç–µ–º—ã
            lesson_id (str): ID —É—Ä–æ–∫–∞
        """
        try:
            self.logger.info(
                f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–∫–∞ {section_id}:{topic_id}:{lesson_id}"
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å state_manager
            if not self.state_manager:
                self.logger.warning("state_manager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
                return

            # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã state_manager
            if hasattr(self.state_manager, "update_lesson_progress"):
                self.state_manager.update_lesson_progress(
                    course_id, section_id, topic_id, lesson_id
                )
                self.logger.info(
                    "–ü—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ state_manager.update_lesson_progress"
                )
            elif hasattr(self.state_manager, "set_current_lesson"):
                self.state_manager.set_current_lesson(section_id, topic_id, lesson_id)
                self.logger.info(
                    "–¢–µ–∫—É—â–∏–π —É—Ä–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ state_manager.set_current_lesson"
                )
            else:
                self.logger.warning(
                    "–ù–µ –Ω–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ state_manager"
                )

        except Exception as e:
            self.logger.warning(
                f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–∫–∞ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ): {str(e)}"
            )

    def _clear_lesson_cache(self):
        """
        –û—á–∏—â–∞–µ—Ç –∫—ç—à —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞.
        """
        self.cached_lesson_content = None
        self.current_lesson_cache_key = None
        self.logger.debug("–ö—ç—à —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞ –æ—á–∏—â–µ–Ω")
