"""
–ú–æ–¥—É–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —É—Ä–æ–∫–æ–≤.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–¥–∞, –∑–∞–¥–∞—á –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π.
–ò–°–ü–†–ê–í–õ–ï–ù–û: –í–∏–¥–∏–º—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –≤–º–µ—Å—Ç–æ —á–µ—Ä–Ω—ã—Ö –±–ª–æ–∫–æ–≤
–ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–µ–º–µ –∫—É—Ä—Å–∞ (–ø—Ä–æ–±–ª–µ–º–∞ #88)
–ù–û–í–û–ï: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ –∫–æ–¥–∞ –¥–ª—è Jupyter Notebook
–ù–û–í–û–ï: –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è —Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
"""

from content_utils import BaseContentGenerator, ContentUtils


class ExamplesGenerator(BaseContentGenerator):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è —É—Ä–æ–∫–æ–≤."""

    def __init__(self, api_key):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏–º–µ—Ä–æ–≤.

        Args:
            api_key (str): API –∫–ª—é—á OpenAI
        """
        super().__init__(api_key)
        self.logger.info("ExamplesGenerator –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def generate_examples(
        self,
        lesson_data,
        lesson_content,
        communication_style="friendly",
        course_context=None,
    ):
        """
        –£–õ–£–ß–®–ï–ù–û: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è Jupyter Notebook.

        Args:
            lesson_data (dict): –î–∞–Ω–Ω—ã–µ –æ–± —É—Ä–æ–∫–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞)
            lesson_content (str): –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            communication_style (str): –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
            course_context (dict, optional): –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏

        Returns:
            str: –°—Ç—Ä–æ–∫–∞ —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏, –≥–æ—Ç–æ–≤—ã–º–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ Jupyter

        Raises:
            Exception: –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª—é—á–µ–π –≤ lesson_data
            lesson_title = lesson_data.get("title", "–£—Ä–æ–∫")
            lesson_description = lesson_data.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
            lesson_keywords = lesson_data.get("keywords", [])

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º keywords –≤ —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —ç—Ç–æ —Å–ø–∏—Å–æ–∫
            keywords_str = (
                ", ".join(lesson_keywords)
                if isinstance(lesson_keywords, list)
                else str(lesson_keywords)
            )

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∞ –∏ –ø—Ä–µ–¥–º–µ—Ç–Ω—É—é –æ–±–ª–∞—Å—Ç—å
            course_subject = self._determine_course_subject(
                course_context, lesson_content, lesson_keywords
            )

            prompt = self._build_jupyter_examples_prompt(
                lesson_title,
                lesson_description,
                keywords_str,
                lesson_content,
                communication_style,
                course_subject,
            )

            messages = [
                {
                    "role": "system",
                    "content": f"–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å Python —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ Jupyter Notebook. –°–¢–†–û–ì–û –≥–µ–Ω–µ—Ä–∏—Ä—É–π –¢–û–õ–¨–ö–û –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ Python –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è {course_subject}.",
                },
                {"role": "user", "content": prompt},
            ]

            examples = self.make_api_request(
                messages=messages,
                temperature=0.3,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ –∫–æ–¥–∞
                max_tokens=3500,
            )

            # –û—á–∏—â–∞–µ–º –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö markdown –º–µ—Ç–æ–∫
            examples = self.clean_markdown_code_blocks(examples)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–ª—É—á—à–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å –ø—Ä–∏–º–µ—Ä–æ–≤
            validated_examples = self._validate_and_enhance_jupyter_examples(
                examples, course_subject
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
            if not self._validate_examples_relevance(
                validated_examples, course_subject
            ):
                self.logger.warning(
                    "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è..."
                )
                # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–º –ø—Ä–æ–º–ø—Ç–æ–º
                validated_examples = self._regenerate_with_jupyter_strict_prompt(
                    lesson_title,
                    lesson_description,
                    keywords_str,
                    lesson_content,
                    communication_style,
                    course_subject,
                )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            self.save_debug_response(
                "examples",
                prompt,
                validated_examples,
                {
                    "lesson_title": lesson_title,
                    "lesson_description": lesson_description,
                    "keywords": keywords_str,
                    "communication_style": communication_style,
                    "course_subject": course_subject,
                    "jupyter_optimized": True,
                },
            )

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –í–ò–î–ò–ú–´–ï —Å—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤
            styled_examples = self._apply_visible_styles(
                validated_examples, communication_style
            )

            self.logger.info(
                f"–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–µ Jupyter –ø—Ä–∏–º–µ—Ä—ã –ø–æ —Ç–µ–º–µ '{course_subject}' —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã"
            )
            return styled_examples

        except Exception as e:
            self.logger.error(
                f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Jupyter –ø—Ä–∏–º–µ—Ä–æ–≤: {str(e)}"
            )
            raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã: {str(e)}")

    def _build_jupyter_examples_prompt(
        self,
        lesson_title,
        lesson_description,
        keywords_str,
        lesson_content,
        communication_style,
        course_subject,
    ):
        """
        –ù–û–í–û–ï: –°–æ–∑–¥–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ Jupyter Notebook.

        Args:
            lesson_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            lesson_description (str): –û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            keywords_str (str): –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —É—Ä–æ–∫–∞
            lesson_content (str): –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            communication_style (str): –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
            course_subject (str): –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫—É—Ä—Å–∞

        Returns:
            str: –ü—Ä–æ–º–ø—Ç –¥–ª—è API —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ Jupyter Notebook
        """
        style_description = ContentUtils.COMMUNICATION_STYLES.get(
            communication_style, ContentUtils.COMMUNICATION_STYLES["friendly"]
        )

        return f"""
        –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –°–æ–∑–¥–∞–π –ø—Ä–∏–º–µ—Ä—ã Python –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –í–´–ü–û–õ–ù–Ø–¢–¨–°–Ø –≤ Jupyter Notebook!

        –¢–µ–º–∞ —É—Ä–æ–∫–∞: {lesson_title}
        –û–ø–∏—Å–∞–Ω–∏–µ: {lesson_description}
        –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords_str}
        –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: {course_subject}

        –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ (–¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞):
        {lesson_content[:2000]}

        –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: {style_description}

        üö® –¢–†–ï–ë–û–í–ê–ù–ò–Ø –î–õ–Ø JUPYTER NOTEBOOK:
        1. –ö–û–î –ë–£–î–ï–¢ –í–´–ü–û–õ–ù–Ø–¢–¨–°–Ø - –∫–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫!
        2. –í–°–ï –∏–º–ø–æ—Ä—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω—ã –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
        3. –í–°–ï –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ –∫–æ–¥–µ
        4. –ö–û–î –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –°–ê–ú–û–î–û–°–¢–ê–¢–û–ß–ù–´–ú (–Ω–µ –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —è—á–µ–µ–∫)
        5. –†–ï–ó–£–õ–¨–¢–ê–¢ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –í–ò–î–ï–ù (print(), return, –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ —Å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º)
        6. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π input() - —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ
        7. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞

        üêç –¢–û–õ–¨–ö–û PYTHON –ö–û–î:
        - –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π HTML, JavaScript, CSS, Java –∏–ª–∏ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏
        - –ò—Å–ø–æ–ª—å–∑—É–π Python —Å–∏–Ω—Ç–∞–∫—Å–∏—Å: def, import, print(), if, for, while, class
        - –ö–∞–∂–¥—ã–π –±–ª–æ–∫ –∫–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é –≤ Jupyter —è—á–µ–π–∫—É

        üìù –°–¢–†–£–ö–¢–£–†–ê –ü–†–ò–ú–ï–†–û–í:
        1. –ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
        2. –ü–æ–ª–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –∫–æ–¥ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏
        3. –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        4. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)

        ‚úÖ –•–û–†–û–®–ò–ï –ü–†–ò–ú–ï–†–´ –¥–ª—è Jupyter:
        ```python
        # –ò–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–µ
        import math

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        radius = 5

        # –í—ã—á–∏—Å–ª–µ–Ω–∏—è
        area = math.pi * radius ** 2

        # –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º {{radius}} = {{area:.2f}}")
        ```

        ‚ùå –ù–ï –î–ï–õ–ê–ô –¢–ê–ö:
        - –ö–æ–¥ –±–µ–∑ –∏–º–ø–æ—Ä—Ç–æ–≤
        - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        - input() –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        - –ö–æ–¥ –±–µ–∑ –≤–∏–¥–∏–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        - HTML/JavaScript/CSS –ø—Ä–∏–º–µ—Ä—ã

        –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: HTML —Å <h3> –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏, <pre><code> –¥–ª—è Python –∫–æ–¥–∞, <p> –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.
        –ö–ê–ñ–î–´–ô –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–º—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –≤ Jupyter Notebook!
        """

    def _validate_and_enhance_jupyter_examples(self, examples, course_subject):
        """
        –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É–ª—É—á—à–∞–µ—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è Jupyter Notebook.

        Args:
            examples (str): –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
            course_subject (str): –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫—É—Ä—Å–∞

        Returns:
            str: –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å—é
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–ª—è Jupyter
            jupyter_issues = self._detect_jupyter_issues(examples)

            if jupyter_issues:
                self.logger.warning(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã Jupyter: {jupyter_issues}")
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                examples = self._fix_jupyter_issues(examples, jupyter_issues)

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–± –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            examples = self._add_execution_notes(examples)

            return examples

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Jupyter –ø—Ä–∏–º–µ—Ä–æ–≤: {str(e)}")
            return examples  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ

    def _detect_jupyter_issues(self, examples):
        """
        –ù–û–í–û–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏ –≤ Jupyter.

        Args:
            examples (str): –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞

        Returns:
            list: –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
        """
        issues = []
        examples_lower = examples.lower()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ input()
        if "input(" in examples_lower:
            issues.append("input_function")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ —Ç–∞–º, –≥–¥–µ –æ–Ω–∏ –Ω—É–∂–Ω—ã
        if (
            any(
                module in examples_lower
                for module in ["math.", "random.", "datetime.", "os."]
            )
            and "import" not in examples_lower
        ):
            issues.append("missing_imports")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–ø—Ä–æ—Å—Ç–∞—è —ç–≤—Ä–∏—Å—Ç–∏–∫–∞)
        if "–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π" in examples_lower or "your_variable" in examples_lower:
            issues.append("undefined_variables")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if "print(" not in examples_lower and "return " not in examples_lower:
            issues.append("no_output")

        return issues

    def _fix_jupyter_issues(self, examples, issues):
        """
        –ù–û–í–û–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏.

        Args:
            examples (str): –ü—Ä–∏–º–µ—Ä—ã —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
            issues (list): –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

        Returns:
            str: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
        """
        fixed_examples = examples

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º input() - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if "input_function" in issues:
            fixed_examples = fixed_examples.replace(
                "input(",
                "# input(  # –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏\n# ",
            )

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã (–±–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
        if "missing_imports" in issues:
            if (
                "math." in fixed_examples.lower()
                and "import math" not in fixed_examples
            ):
                fixed_examples = "import math\n\n" + fixed_examples
            if (
                "random." in fixed_examples.lower()
                and "import random" not in fixed_examples
            ):
                fixed_examples = "import random\n\n" + fixed_examples

        return fixed_examples

    def _add_execution_notes(self, examples):
        """
        –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–º–µ—Ç–∫–∏ –æ–± –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä–æ–≤.

        Args:
            examples (str): –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞

        Returns:
            str: –ü—Ä–∏–º–µ—Ä—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
        """
        execution_note = """
        <div style="background-color: #e7f3ff; border: 1px solid #b3d9ff; border-radius: 6px; padding: 12px; margin: 10px 0;">
            <strong>üìù –ó–∞–º–µ—Ç–∫–∞:</strong> –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –≥–æ—Ç–æ–≤—ã –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –≤ Jupyter Notebook.
            –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –≤ —è—á–µ–π–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ Shift+Enter –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
        </div>
        """

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–º–µ—Ç–∫—É –≤ –Ω–∞—á–∞–ª–æ
        return execution_note + examples

    def _regenerate_with_jupyter_strict_prompt(
        self,
        lesson_title,
        lesson_description,
        keywords_str,
        lesson_content,
        communication_style,
        course_subject,
    ):
        """
        –ù–û–í–û–ï: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Å—Ç—Ä–æ–≥–∏–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ Jupyter.

        Returns:
            str: –°—Ç—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ –ø—Ä–∏–º–µ—Ä—ã
        """
        try:
            strict_jupyter_prompt = f"""
            üö® –≠–ö–°–¢–†–ï–ú–ê–õ–¨–ù–û –í–ê–ñ–ù–û: –°–æ–∑–¥–∞–π –¢–û–õ–¨–ö–û –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ Python –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è Jupyter Notebook!

            –£—Ä–æ–∫: {lesson_title}
            –û–ø–∏—Å–∞–Ω–∏–µ: {lesson_description}
            –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords_str}

            –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞:
            {lesson_content[:1500]}

            üéØ JUPYTER NOTEBOOK –¢–†–ï–ë–û–í–ê–ù–ò–Ø (–°–¢–†–û–ì–û –°–û–ë–õ–Æ–î–ê–ô):
            1. –ö–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä - –ø–æ–ª–Ω–æ—Å—Ç—å—é –ò–°–ü–û–õ–ù–Ø–ï–ú–´–ô Python –∫–æ–¥
            2. –í–°–ï –∏–º–ø–æ—Ä—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ –∫–∞–∂–¥–æ–º –ø—Ä–∏–º–µ—Ä–µ
            3. –í–°–ï –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ –∫–æ–¥–µ
            4. –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∏–¥–µ–Ω (print, return, –∏–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ)
            5. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π input() - —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            6. –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é –≤ Jupyter —è—á–µ–π–∫—É –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é

            ‚úÖ –ü–†–ò–ú–ï–† –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –ö–û–î–ê:
            ```python
            # –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
            import math

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            number = 16

            # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
            square_root = math.sqrt(number)

            # –ü–û–ö–ê–ó–´–í–ê–ï–ú —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print(f"–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ {{number}} = {{square_root}}")
            ```

            ‚ùå –°–¢–†–û–ì–û –ó–ê–ü–†–ï–©–ï–ù–û:
            - HTML, JavaScript, CSS –∫–æ–¥
            - input() —Ñ—É–Ω–∫—Ü–∏–∏
            - –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            - –ö–æ–¥ –±–µ–∑ –≤–∏–¥–∏–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            - –ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Jupyter

            –§–æ—Ä–º–∞—Ç: HTML —Å <h3>, <pre><code> –¥–ª—è Python, <p> –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.
            """

            messages = [
                {
                    "role": "system",
                    "content": f"–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç Jupyter Notebook –∏ Python. –ì–µ–Ω–µ—Ä–∏—Ä—É–π –¢–û–õ–¨–ö–û –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è {course_subject}.",
                },
                {"role": "user", "content": strict_jupyter_prompt},
            ]

            examples = self.make_api_request(
                messages=messages,
                temperature=0.2,  # –û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
                max_tokens=3000,
            )

            # –û—á–∏—â–∞–µ–º –æ—Ç markdown
            examples = self.clean_markdown_code_blocks(examples)

            self.logger.info("–°—Ç—Ä–æ–≥–∞—è Jupyter –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            return examples

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç—Ä–æ–≥–æ–π Jupyter –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –ø—Ä–∏–º–µ—Ä
            return self._create_fallback_jupyter_example(lesson_title)

    def _create_fallback_jupyter_example(self, lesson_title):
        """
        –ù–û–í–û–ï: –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –ø—Ä–∏–º–µ—Ä –¥–ª—è Jupyter –≤ —Å–ª—É—á–∞–µ —Å–±–æ—è.

        Args:
            lesson_title (str): –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞

        Returns:
            str: –ë–∞–∑–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –ø—Ä–∏–º–µ—Ä
        """
        return f"""
        <h3>–ë–∞–∑–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –ø—Ä–∏–º–µ—Ä: {lesson_title}</h3>
        <p>–ü—Ä–æ—Å—Ç–æ–π Python –∫–æ–¥, –≥–æ—Ç–æ–≤—ã–π –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –≤ Jupyter Notebook:</p>
        <pre><code># –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä Python –¥–ª—è —É—Ä–æ–∫–∞: {lesson_title}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
lesson_name = "{lesson_title}"
is_completed = True

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
print(f"–£—Ä–æ–∫: {{lesson_name}}")
print(f"–°—Ç–∞—Ç—É—Å: {{'–ò–∑—É—á–µ–Ω' if is_completed else '–í –ø—Ä–æ—Ü–µ—Å—Å–µ'}}")

# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ Python
numbers = [1, 2, 3, 4, 5]
sum_numbers = sum(numbers)

print(f"–ß–∏—Å–ª–∞: {{numbers}}")
print(f"–°—É–º–º–∞: {{sum_numbers}}")

# –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –≤ Jupyter
sum_numbers</code></pre>

        <p><strong>–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong></p>
        <pre>–£—Ä–æ–∫: {lesson_title}
–°—Ç–∞—Ç—É—Å: –ò–∑—É—á–µ–Ω
–ß–∏—Å–ª–∞: [1, 2, 3, 4, 5]
–°—É–º–º–∞: 15
15</pre>
        """

    def _determine_course_subject(
        self, course_context, lesson_content, lesson_keywords
    ):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–Ω—É—é –æ–±–ª–∞—Å—Ç—å –∫—É—Ä—Å–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä–æ–≤.

        Args:
            course_context (dict, optional): –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∞
            lesson_content (str): –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            lesson_keywords (list): –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —É—Ä–æ–∫–∞

        Returns:
            str: –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫—É—Ä—Å–∞
        """
        try:
            # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ä—Å–∞
            if course_context and isinstance(course_context, dict):
                course_title = course_context.get("course_title", "")
                if course_title:
                    return course_title

            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —É—Ä–æ–∫–∞
            content_lower = lesson_content.lower()

            # Python –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
            python_indicators = [
                "python",
                "def ",
                "import ",
                "print(",
                "—Å–ø–∏—Å–æ–∫",
                "—Å–ª–æ–≤–∞—Ä—å",
                "—Ñ—É–Ω–∫—Ü–∏—è",
            ]
            if any(indicator in content_lower for indicator in python_indicators):
                return "Python –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"

            # –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
            web_indicators = ["html", "css", "javascript", "–≤–µ–±", "—Å–∞–π—Ç", "–±—Ä–∞—É–∑–µ—Ä"]
            if any(indicator in content_lower for indicator in web_indicators):
                return "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"

            # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
            data_indicators = [
                "–¥–∞–Ω–Ω—ã–µ",
                "–∞–Ω–∞–ª–∏–∑",
                "pandas",
                "numpy",
                "matplotlib",
                "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            ]
            if any(indicator in content_lower for indicator in data_indicators):
                return "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Python"

            # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
            return "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python"

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏: {str(e)}")
            return "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"

    def _validate_examples_relevance(self, examples, course_subject):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–µ–º–µ –∫—É—Ä—Å–∞.

        Args:
            examples (str): –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
            course_subject (str): –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫—É—Ä—Å–∞

        Returns:
            bool: True –µ—Å–ª–∏ –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã, –∏–Ω–∞—á–µ False
        """
        try:
            examples_lower = examples.lower()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
            irrelevant_patterns = [
                "html",
                "<html>",
                "<head>",
                "<body>",
                "<div>",
                "<script>",
                "javascript",
                "css",
                "var ",
                "document.",
                "function(",
                "onclick",
                "onload",
                "jquery",
                "$(",
                "java ",
                "c++",
                "c#",
                "php",
                "ruby",
                "go ",
            ]

            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
            for pattern in irrelevant_patterns:
                if pattern in examples_lower:
                    self.logger.warning(f"–ù–∞–π–¥–µ–Ω –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: {pattern}")
                    return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö Python –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
            if "python" in course_subject.lower():
                relevant_patterns = [
                    "python",
                    "def ",
                    "import ",
                    "print(",
                    "if __name__",
                    "for ",
                    "while ",
                    "class ",
                    "return ",
                    "# ",
                    ".py",
                    "—Å–ø–∏—Å–æ–∫",
                    "—Å–ª–æ–≤–∞—Ä—å",
                    "–∫–æ—Ä—Ç–µ–∂",
                ]

                has_relevant = any(
                    pattern in examples_lower for pattern in relevant_patterns
                )
                if not has_relevant:
                    self.logger.warning("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö Python –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤")
                    return False

            return True

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä–æ–≤: {str(e)}")
            return True  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏

    def _apply_visible_styles(self, examples, communication_style):
        """
        –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–º–µ–Ω—è–µ—Ç –í–ò–î–ò–ú–´–ï —Å—Ç–∏–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏.

        Args:
            examples (str): –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
            communication_style (str): –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è

        Returns:
            str: –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Å –≤–∏–¥–∏–º—ã–º –∫–æ–¥–æ–º
        """
        # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∏–ª—è
        if communication_style == "friendly":
            prefix = "<p>üéØ <strong>–û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞:</strong></p>"
        elif communication_style == "professional":
            prefix = "<p><strong>üìã –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:</strong></p>"
        elif communication_style == "motivating":
            prefix = "<p>üöÄ <strong>–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏–º –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ! –ò–∑—É—á–∏—Ç–µ —ç—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã:</strong></p>"
        else:
            prefix = "<p><strong>üìù –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã:</strong></p>"

        # CSS —Å—Ç–∏–ª–∏ –¥–ª—è –í–ò–î–ò–ú–û–ì–û –∫–æ–¥–∞
        visible_css = f"""
        <style>
        .examples-visible {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.4;
            color: #212529;
            background-color: #ffffff;
            padding: 0;
            margin: 0;
        }}
        .examples-visible h1, .examples-visible h2, .examples-visible h3, .examples-visible h4 {{
            color: #495057;
            margin-top: 16px;
            margin-bottom: 8px;
            font-weight: 600;
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 4px;
        }}
        .examples-visible h1 {{ font-size: 20px; }}
        .examples-visible h2 {{ font-size: 18px; }}
        .examples-visible h3 {{ font-size: 17px; }}
        .examples-visible h4 {{ font-size: 16px; }}
        .examples-visible p {{
            margin-bottom: 8px;
            line-height: 1.3;
            text-align: justify;
        }}
        .examples-visible ul, .examples-visible ol {{
            margin-bottom: 10px;
            padding-left: 25px;
            line-height: 1.3;
        }}
        .examples-visible li {{
            margin-bottom: 4px;
        }}
        .examples-visible code {{
            background-color: #f8f9fa;
            color: #d63384;
            padding: 2px 6px;
            border-radius: 4px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            font-weight: 600;
            border: 1px solid #dee2e6;
        }}
        .examples-visible pre {{
            background-color: #f8f9fa;
            color: #212529;
            padding: 12px;
            border-radius: 8px;
            overflow-x: auto;
            margin: 10px 0;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            line-height: 1.05;
            border: 2px solid #dee2e6;
        }}
        .examples-visible pre code {{
            background: none;
            color: inherit;
            padding: 0;
            font-size: inherit;
            border: none;
        }}
        .examples-visible .example-block {{
            background-color: #ffffff;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 12px;
            margin: 10px 0;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }}
        .examples-visible strong {{
            color: #495057;
            font-weight: 600;
        }}
        .examples-visible em {{
            color: #6c757d;
            font-style: italic;
        }}
        .jupyter-notice {{
            background-color: #e7f3ff;
            border-left: 4px solid #007bff;
            padding: 12px;
            margin: 10px 0;
            border-radius: 4px;
        }}
        </style>
        <div class="examples-visible">
        """

        return f"{visible_css}{prefix}{examples}</div>"
