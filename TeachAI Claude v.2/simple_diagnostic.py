#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ TeachAI 2
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –≤–µ—â–∏ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""

import os
import sys

print("üîç –£–ü–†–û–©–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TEACHAI 2")
print("=" * 40)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
print(f"1. Python –≤–µ—Ä—Å–∏—è: {sys.version}")

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
print(f"2. –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
required_files = [
    "engine.py",
    "state_manager.py",
    "content_generator.py",
    "lesson_interface.py",
    "lesson_interactive_handlers.py",
    "assessment_interface.py",
    "interface_facade.py",
    "teachai.ipynb",
]

print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞:")
missing_files = []
for file in required_files:
    if os.path.exists(file):
        print(f"   ‚úÖ {file}")
    else:
        print(f"   ‚ùå {file}")
        missing_files.append(file)

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞:")
if os.path.exists(".env"):
    print("   ‚úÖ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    try:
        with open(".env", "r") as f:
            content = f.read()
        if "OPENAI_API_KEY" in content:
            print("   ‚úÖ OPENAI_API_KEY –Ω–∞–π–¥–µ–Ω –≤ .env")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞
            for line in content.split("\n"):
                if line.startswith("OPENAI_API_KEY="):
                    key_value = line.split("=", 1)[1].strip()
                    if key_value and key_value != "–≤–∞—à-–∫–ª—é—á-–∑–¥–µ—Å—å":
                        print(f"   ‚úÖ API –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–ª–∏–Ω–∞: {len(key_value)})")
                    else:
                        print("   ‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —à–∞–±–ª–æ–Ω)")
        else:
            print("   ‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env: {e}")
else:
    print("   ‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π:")
test_modules = [
    ("os", "os"),
    ("sys", "sys"),
    ("logging", "logging"),
    ("ipywidgets", "ipywidgets"),
    ("dotenv", "python-dotenv"),
]

for module_name, package_name in test_modules:
    try:
        __import__(module_name)
        print(f"   ‚úÖ {module_name}")
    except ImportError:
        print(f"   ‚ùå {module_name} (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install {package_name})")

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI
print("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI:")
try:
    import openai

    print("   ‚úÖ openai –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω")
except ImportError:
    print("   ‚ùå openai –º–æ–¥—É–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (pip install openai)")

# 7. –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
print("\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞:")
project_modules = ["engine", "state_manager", "content_generator"]

for module in project_modules:
    if f"{module}.py" in missing_files:
        print(f"   ‚è≠Ô∏è {module} (—Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)")
        continue

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
        if os.getcwd() not in sys.path:
            sys.path.insert(0, os.getcwd())

        __import__(module)
        print(f"   ‚úÖ {module}")
    except Exception as e:
        print(f"   ‚ùå {module}: {str(e)}")

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print("\n" + "=" * 40)
print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–û–í–ï–†–ö–ò:")

if missing_files:
    print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
    print("–†–ï–®–ï–ù–ò–ï: –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
else:
    print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã")

if not os.path.exists(".env"):
    print("‚ùå –ù–µ—Ç .env —Ñ–∞–π–ª–∞")
    print("–†–ï–®–ï–ù–ò–ï: –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å OPENAI_API_KEY=–≤–∞—à-–∫–ª—é—á")
else:
    print("‚úÖ .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
print("1. –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ ‚ùå –ø—Ä–æ–±–ª–µ–º—ã")
print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–æ–¥—É–ª–∏: pip install openai python-dotenv ipywidgets")
print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ")
print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã")

print("\n" + "=" * 40)
